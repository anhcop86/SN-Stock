
@{
    ViewBag.Title = "Phím hàng: " + @ViewBag.StockCode;
    Layout = "~/Views/Shared/_Layout_MyProfile.cshtml";
}
@section scripts{
    <script src="~/Scripts/knockout.mapping-latest.js"></script>
    <script src="~/Scripts/jquery.signalR-2.1.2.min.js"></script>
    <script src="~/signalr/hubs"></script>
    <link href="~/Content/StockPrice.css" rel="stylesheet" />
@*<script src="~/Scripts/jquery.timeago.js"></script>*@
@*<script src="~/Scripts/StockPrice.js"></script>*@
}



<div class="stock-detail">
    @Html.Partial("_Partial_stock-detail")
</div>
<div class="bg-white">
    <div class="status-box">
        <div class="avatar-small">
            <img src="@Url.Content("~/" + @ViewBag.AvataEmage)?width=28&height=28&mode=crop" class="img-rounded" alt="avatar">
        </div>
        @*<div id="main-commentKo">*@ <!-- comment here-->
            <div class="input-status">
                <form name="frmStatus">
                    <div id="input-status-text" class="input-status-text">
                        <textarea name="status" rows="5" placeholder="$Mã cổ phiếu ($VNM, $GAS); Username" id="status" title="Search" autocomplete="off" rows="5"></textarea>
                    </div>
                    <div class="status-control">
                        <div class="choose_file f-left">
                            <i class="fa fa-camera"></i>
                            <input name="Select File" type="file" />
                        </div>

                        <div id="radio" class="switch3button f-left">
                            <input type="radio" id="radio1" name="BullBear" value="Bull"><label for="radio1">Tăng</label>
                            <input type="radio" id="radio2" name="BullBear" checked="checked" value="None"><label for="radio2">Đứng</label>
                            <input type="radio" id="radio3" name="BullBear" value="Bear"><label for="radio3">Giảm</label>
                        </div>
                        <div id="btnPhim" class="f-right">
                            <span>140</span>
                            <a href="#" class="button-phim"><span>PHÍM</span></a>
                        </div>
                    </div>
                </form>
            </div>
        
    <div class="filer-bar">
        <div class="toSpan filer-bar-label">Bộ Lọc: </div>
        <div class="toSpan filer-bar-item"> <a href="#">Tất cả</a> </div>
        <div class="toSpan filer-bar-item"> <a href="#">Theo biểu đồ</a> </div>
        <div class="toSpan filer-bar-item"> <a href="#">Theo nhận định</a></div>
        <div class="toSpan filer-bar-item">
            <a id="btn-option-more" href="#">
                Tùy chọn khác
                <i class="fa fa-caret-down"></i>
            </a>
        </div>
        <br>
        <div class="dropdownlist filer-bar-dropdown">
            <div class="dropdown-item">
                <a href="#"><span class="todiv"><i class="fa fa-adn"></i> Profile</span></a>
            </div>
            <div class="dropdown-item">
                <a href="#"><span class="todiv"><i class="fa fa-cog"></i> Setting</span></a>
            </div>
            <div class="dropdown-item">
                <a href="#"><span class="todiv"><i class="fa fa-sign-out"></i> Logout</span></a>
            </div>
        </div>

    </div>
    
        <div class="filer-new-status">
            <div class="filer-new-status-button-bar">
                <div class="onoffswitch f-right">
                    <input type="checkbox" name="onoffswitch" class="onoffswitch-checkbox" id="myonoffswitch" checked>
                    <label id="abcww" class="onoffswitch-label" for="myonoffswitch">
                        <span class="onoffswitch-inner"></span>
                        <span class="onoffswitch-switch"></span>
                    </label>
                </div>
                <div class="text-label">Hiển thị bài phím mới</div>
            </div>
            <div id="msg-new-status" class="msg-new-status">
                Có <strong>2</strong> bài phím mới: <a href="#">Hiển Thị <strong>2</strong> bài phím này</a>
            </div>
        </div>
        <div class="list-status" data-bind="foreach : posts">

            <div class="list-item-status">
                <div class="avata-genaral-size">
                    <img src="/img/avatar4.jpg" class="img-rounded" alt="avatar">
                </div>
                <div class="list-item-detail">
                    <div class="list-item-date">Dec 1 at 9:30 PM</div>
                    <div class="list-item-username">Tom Truong</div>
                    <div class="list-item-status-content" data-bind="html : Message"></div>
                    <div class="list-item-control">
                        <a class="button"><i class="fa fa-comments"></i></a>
                        <a class="button">Trả lời</a>
                        <a class="button">Chia sẻ</a>
                        <a class="button">Thích</a>
                        <a class="button">Báo cáo vi phạm</a>
                    </div>
                </div>
            </div>
        </div> <!--End list comment-->
    @*</div>*@
  </div>
</div>
<!-- gia co phieu real time-->
<script type="text/javascript"> 
    var viewStockModel = {

        CompanyID: ko.observable(),
        FinishPrice: ko.observable(),
        Diff: ko.observable(),
        DiffRate: ko.observable(),

    };

    //var listStock =
    viewStockModel.ColourChange = ko.pureComputed(function () {
        return this.Diff() === 0 ? 'YELLOW_Price'
            : this.Diff() > 0 ? 'GREEN_Price'
            : 'RED_Price';
    }, viewStockModel);

    viewStockModel.DiffRateChange = ko.pureComputed(function () {
        return '(' + ko.unwrap(this.DiffRate) + '%)';
    }, viewStockModel);
    // This makes Knockout get to work


    $(function () {
        var ticker = $.connection.StockRealTimeHub;

        function init() {

            ticker.server.getStock('@ViewBag.StockCode'.toUpperCase()).done(function (stock) {

                viewStockModel.CompanyID(stock.CompanyID).Diff(stock.Diff).DiffRate(stock.DiffRate).FinishPrice(stock.FinishPrice);
                ko.applyBindings(viewStockModel, document.getElementById("stockPriceDivId")); // knockout javascript framework bindings

            });
            ticker.server.joinRoom('@ViewBag.StockCode'.toUpperCase());
        }

        ticker.client.updateStockPrice = function (stock) {
            viewStockModel.CompanyID(stock.CompanyID).Diff(stock.Diff).DiffRate(stock.DiffRate).FinishPrice(stock.FinishPrice);

        }

        $.connection.hub.start().done(init);
        $.connection.hub.logging = true;

    });


</script>

<!-- Comment-->

@*<script type="text/javascript">
    function getTimeAgo(varDate) {
        if (varDate) {
            return $.timeago(varDate.toString().slice(-1) == 'Z' ? varDate : varDate + 'Z');
        }
        else {
            return '';
        }
    }
    function Post(data, hub) {
        var self = this;
        data = data || {};
        //self.PostId = data.PostId;
        self.Message = ko.observable(data.Message || "");
        //self.PostedBy = data.PostedBy || "";
        //self.PostedByName = data.PostedByName || "";
        //self.PostedByAvatar = data.PostedByAvatar || "";
        //self.PostedDate = getTimeAgo(data.PostedDate);
        //self.error = ko.observable();        
        self.hub = hub;       

    }
    function viewModel() {
        var self = this;
        self.posts = ko.observableArray();
        self.newMessage = ko.observable();
        self.error = ko.observable();

        // SignalR related
        self.newPosts = ko.observableArray();
        // Reference the proxy for the hub. 
        self.hub = $.connection.CommentHub;

        self.init = function () {
            self.error(null);
            self.hub.server.getPosts('@ViewBag.StockCode'.toUpperCase()).fail(function (err) {
                self.error(err);
            });
        }

        self.hub.client.loadPosts = function (data) {
            var mappedPosts = $.map(data, function (item) { return new Post(item, self.hub); });
            
            self.posts(mappedPosts);
        }

    }

 
    var vmPost = new viewModel();
    ko.applyBindings(vmPost, document.getElementById("main-commentKo"));
    $.connection.hub.start().done(function () {
        vmPost.init();
    });

</script>*@

