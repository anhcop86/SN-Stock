//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ShareHolderManagerModel", "FK_ShareHolder_BankId", "Bank", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ShareHolderDataService.Bank), "ShareHolder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ShareHolderDataService.ShareHolder), true)]
[assembly: EdmRelationshipAttribute("ShareHolderManagerModel", "FK_City_Language", "Language", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ShareHolderDataService.Language), "City", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ShareHolderDataService.City), true)]
[assembly: EdmRelationshipAttribute("ShareHolderManagerModel", "FK_LocationCity_City", "City", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ShareHolderDataService.City), "LocationCity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ShareHolderDataService.LocationCity), true)]
[assembly: EdmRelationshipAttribute("ShareHolderManagerModel", "FK_Location_Language", "Language", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ShareHolderDataService.Language), "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ShareHolderDataService.Location), true)]
[assembly: EdmRelationshipAttribute("ShareHolderManagerModel", "FK_LocationCity_Location", "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ShareHolderDataService.Location), "LocationCity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ShareHolderDataService.LocationCity), true)]
[assembly: EdmRelationshipAttribute("ShareHolderManagerModel", "FK_ShareHolder_Membership", "Membership", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ShareHolderDataService.Membership), "ShareHolder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ShareHolderDataService.ShareHolder), true)]
[assembly: EdmRelationshipAttribute("ShareHolderManagerModel", "FK_ShareHolder_ShareHolderGroupId", "ShareHolderGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ShareHolderDataService.ShareHolderGroup), "ShareHolder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ShareHolderDataService.ShareHolder), true)]
[assembly: EdmRelationshipAttribute("ShareHolderManagerModel", "FK_ShareHolderId_TransactionDetail", "ShareHolder", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ShareHolderDataService.ShareHolder), "TransactionDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ShareHolderDataService.TransactionDetail), true)]
[assembly: EdmRelationshipAttribute("ShareHolderManagerModel", "FK_ShareTypeId_TransactionDetail", "ShareType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ShareHolderDataService.ShareType), "TransactionDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ShareHolderDataService.TransactionDetail), true)]
[assembly: EdmRelationshipAttribute("ShareHolderManagerModel", "FK_TransactionCategoryId_Transaction", "TransactionCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ShareHolderDataService.TransactionCategory), "TradingTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ShareHolderDataService.TradingTransaction), true)]
[assembly: EdmRelationshipAttribute("ShareHolderManagerModel", "FK_TransactionId_TransactionDetail", "TradingTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ShareHolderDataService.TradingTransaction), "TransactionDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ShareHolderDataService.TransactionDetail), true)]

#endregion

namespace ShareHolderDataService
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ShareHolderManagerEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ShareHolderManagerEntities object using the connection string found in the 'ShareHolderManagerEntities' section of the application configuration file.
        /// </summary>
        public ShareHolderManagerEntities() : base("name=ShareHolderManagerEntities", "ShareHolderManagerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ShareHolderManagerEntities object.
        /// </summary>
        public ShareHolderManagerEntities(string connectionString) : base(connectionString, "ShareHolderManagerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ShareHolderManagerEntities object.
        /// </summary>
        public ShareHolderManagerEntities(EntityConnection connection) : base(connection, "ShareHolderManagerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Bank> Banks
        {
            get
            {
                if ((_Banks == null))
                {
                    _Banks = base.CreateObjectSet<Bank>("Banks");
                }
                return _Banks;
            }
        }
        private ObjectSet<Bank> _Banks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<City> Cities
        {
            get
            {
                if ((_Cities == null))
                {
                    _Cities = base.CreateObjectSet<City>("Cities");
                }
                return _Cities;
            }
        }
        private ObjectSet<City> _Cities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Company> Companies
        {
            get
            {
                if ((_Companies == null))
                {
                    _Companies = base.CreateObjectSet<Company>("Companies");
                }
                return _Companies;
            }
        }
        private ObjectSet<Company> _Companies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Language> Languages
        {
            get
            {
                if ((_Languages == null))
                {
                    _Languages = base.CreateObjectSet<Language>("Languages");
                }
                return _Languages;
            }
        }
        private ObjectSet<Language> _Languages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Location> Locations
        {
            get
            {
                if ((_Locations == null))
                {
                    _Locations = base.CreateObjectSet<Location>("Locations");
                }
                return _Locations;
            }
        }
        private ObjectSet<Location> _Locations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LocationCity> LocationCities
        {
            get
            {
                if ((_LocationCities == null))
                {
                    _LocationCities = base.CreateObjectSet<LocationCity>("LocationCities");
                }
                return _LocationCities;
            }
        }
        private ObjectSet<LocationCity> _LocationCities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Membership> Memberships
        {
            get
            {
                if ((_Memberships == null))
                {
                    _Memberships = base.CreateObjectSet<Membership>("Memberships");
                }
                return _Memberships;
            }
        }
        private ObjectSet<Membership> _Memberships;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ShareHolder> ShareHolders
        {
            get
            {
                if ((_ShareHolders == null))
                {
                    _ShareHolders = base.CreateObjectSet<ShareHolder>("ShareHolders");
                }
                return _ShareHolders;
            }
        }
        private ObjectSet<ShareHolder> _ShareHolders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ShareHolderGroup> ShareHolderGroups
        {
            get
            {
                if ((_ShareHolderGroups == null))
                {
                    _ShareHolderGroups = base.CreateObjectSet<ShareHolderGroup>("ShareHolderGroups");
                }
                return _ShareHolderGroups;
            }
        }
        private ObjectSet<ShareHolderGroup> _ShareHolderGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ShareType> ShareTypes
        {
            get
            {
                if ((_ShareTypes == null))
                {
                    _ShareTypes = base.CreateObjectSet<ShareType>("ShareTypes");
                }
                return _ShareTypes;
            }
        }
        private ObjectSet<ShareType> _ShareTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TradingTransaction> TradingTransactions
        {
            get
            {
                if ((_TradingTransactions == null))
                {
                    _TradingTransactions = base.CreateObjectSet<TradingTransaction>("TradingTransactions");
                }
                return _TradingTransactions;
            }
        }
        private ObjectSet<TradingTransaction> _TradingTransactions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TransactionCategory> TransactionCategories
        {
            get
            {
                if ((_TransactionCategories == null))
                {
                    _TransactionCategories = base.CreateObjectSet<TransactionCategory>("TransactionCategories");
                }
                return _TransactionCategories;
            }
        }
        private ObjectSet<TransactionCategory> _TransactionCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TransactionDetail> TransactionDetails
        {
            get
            {
                if ((_TransactionDetails == null))
                {
                    _TransactionDetails = base.CreateObjectSet<TransactionDetail>("TransactionDetails");
                }
                return _TransactionDetails;
            }
        }
        private ObjectSet<TransactionDetail> _TransactionDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<V_CREDIT_TRANSACTIONLIST> V_CREDIT_TRANSACTIONLIST
        {
            get
            {
                if ((_V_CREDIT_TRANSACTIONLIST == null))
                {
                    _V_CREDIT_TRANSACTIONLIST = base.CreateObjectSet<V_CREDIT_TRANSACTIONLIST>("V_CREDIT_TRANSACTIONLIST");
                }
                return _V_CREDIT_TRANSACTIONLIST;
            }
        }
        private ObjectSet<V_CREDIT_TRANSACTIONLIST> _V_CREDIT_TRANSACTIONLIST;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<V_CREDIT_TRANSACTIONS> V_CREDIT_TRANSACTIONS
        {
            get
            {
                if ((_V_CREDIT_TRANSACTIONS == null))
                {
                    _V_CREDIT_TRANSACTIONS = base.CreateObjectSet<V_CREDIT_TRANSACTIONS>("V_CREDIT_TRANSACTIONS");
                }
                return _V_CREDIT_TRANSACTIONS;
            }
        }
        private ObjectSet<V_CREDIT_TRANSACTIONS> _V_CREDIT_TRANSACTIONS;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<V_DEBIT_TRANSACTIONLIST> V_DEBIT_TRANSACTIONLIST
        {
            get
            {
                if ((_V_DEBIT_TRANSACTIONLIST == null))
                {
                    _V_DEBIT_TRANSACTIONLIST = base.CreateObjectSet<V_DEBIT_TRANSACTIONLIST>("V_DEBIT_TRANSACTIONLIST");
                }
                return _V_DEBIT_TRANSACTIONLIST;
            }
        }
        private ObjectSet<V_DEBIT_TRANSACTIONLIST> _V_DEBIT_TRANSACTIONLIST;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<V_DEBIT_TRANSACTIONS> V_DEBIT_TRANSACTIONS
        {
            get
            {
                if ((_V_DEBIT_TRANSACTIONS == null))
                {
                    _V_DEBIT_TRANSACTIONS = base.CreateObjectSet<V_DEBIT_TRANSACTIONS>("V_DEBIT_TRANSACTIONS");
                }
                return _V_DEBIT_TRANSACTIONS;
            }
        }
        private ObjectSet<V_DEBIT_TRANSACTIONS> _V_DEBIT_TRANSACTIONS;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<V_OPENBALANCE_TRANSACTIONLIST> V_OPENBALANCE_TRANSACTIONLIST
        {
            get
            {
                if ((_V_OPENBALANCE_TRANSACTIONLIST == null))
                {
                    _V_OPENBALANCE_TRANSACTIONLIST = base.CreateObjectSet<V_OPENBALANCE_TRANSACTIONLIST>("V_OPENBALANCE_TRANSACTIONLIST");
                }
                return _V_OPENBALANCE_TRANSACTIONLIST;
            }
        }
        private ObjectSet<V_OPENBALANCE_TRANSACTIONLIST> _V_OPENBALANCE_TRANSACTIONLIST;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<V_SELLER_BUYER_OPENINGBALANCE> V_SELLER_BUYER_OPENINGBALANCE
        {
            get
            {
                if ((_V_SELLER_BUYER_OPENINGBALANCE == null))
                {
                    _V_SELLER_BUYER_OPENINGBALANCE = base.CreateObjectSet<V_SELLER_BUYER_OPENINGBALANCE>("V_SELLER_BUYER_OPENINGBALANCE");
                }
                return _V_SELLER_BUYER_OPENINGBALANCE;
            }
        }
        private ObjectSet<V_SELLER_BUYER_OPENINGBALANCE> _V_SELLER_BUYER_OPENINGBALANCE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<V_SUM_TRANSACTION> V_SUM_TRANSACTION
        {
            get
            {
                if ((_V_SUM_TRANSACTION == null))
                {
                    _V_SUM_TRANSACTION = base.CreateObjectSet<V_SUM_TRANSACTION>("V_SUM_TRANSACTION");
                }
                return _V_SUM_TRANSACTION;
            }
        }
        private ObjectSet<V_SUM_TRANSACTION> _V_SUM_TRANSACTION;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<V_TRANSACTIONDETAILOFSHAREHOLDERSEARCH> V_TRANSACTIONDETAILOFSHAREHOLDERSEARCH
        {
            get
            {
                if ((_V_TRANSACTIONDETAILOFSHAREHOLDERSEARCH == null))
                {
                    _V_TRANSACTIONDETAILOFSHAREHOLDERSEARCH = base.CreateObjectSet<V_TRANSACTIONDETAILOFSHAREHOLDERSEARCH>("V_TRANSACTIONDETAILOFSHAREHOLDERSEARCH");
                }
                return _V_TRANSACTIONDETAILOFSHAREHOLDERSEARCH;
            }
        }
        private ObjectSet<V_TRANSACTIONDETAILOFSHAREHOLDERSEARCH> _V_TRANSACTIONDETAILOFSHAREHOLDERSEARCH;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Banks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBanks(Bank bank)
        {
            base.AddObject("Banks", bank);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Cities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCities(City city)
        {
            base.AddObject("Cities", city);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Companies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanies(Company company)
        {
            base.AddObject("Companies", company);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Languages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLanguages(Language language)
        {
            base.AddObject("Languages", language);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Locations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLocations(Location location)
        {
            base.AddObject("Locations", location);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LocationCities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLocationCities(LocationCity locationCity)
        {
            base.AddObject("LocationCities", locationCity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Memberships EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMemberships(Membership membership)
        {
            base.AddObject("Memberships", membership);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ShareHolders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToShareHolders(ShareHolder shareHolder)
        {
            base.AddObject("ShareHolders", shareHolder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ShareHolderGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToShareHolderGroups(ShareHolderGroup shareHolderGroup)
        {
            base.AddObject("ShareHolderGroups", shareHolderGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ShareTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToShareTypes(ShareType shareType)
        {
            base.AddObject("ShareTypes", shareType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TradingTransactions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTradingTransactions(TradingTransaction tradingTransaction)
        {
            base.AddObject("TradingTransactions", tradingTransaction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TransactionCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransactionCategories(TransactionCategory transactionCategory)
        {
            base.AddObject("TransactionCategories", transactionCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TransactionDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransactionDetails(TransactionDetail transactionDetail)
        {
            base.AddObject("TransactionDetails", transactionDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the V_CREDIT_TRANSACTIONLIST EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToV_CREDIT_TRANSACTIONLIST(V_CREDIT_TRANSACTIONLIST v_CREDIT_TRANSACTIONLIST)
        {
            base.AddObject("V_CREDIT_TRANSACTIONLIST", v_CREDIT_TRANSACTIONLIST);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the V_CREDIT_TRANSACTIONS EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToV_CREDIT_TRANSACTIONS(V_CREDIT_TRANSACTIONS v_CREDIT_TRANSACTIONS)
        {
            base.AddObject("V_CREDIT_TRANSACTIONS", v_CREDIT_TRANSACTIONS);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the V_DEBIT_TRANSACTIONLIST EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToV_DEBIT_TRANSACTIONLIST(V_DEBIT_TRANSACTIONLIST v_DEBIT_TRANSACTIONLIST)
        {
            base.AddObject("V_DEBIT_TRANSACTIONLIST", v_DEBIT_TRANSACTIONLIST);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the V_DEBIT_TRANSACTIONS EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToV_DEBIT_TRANSACTIONS(V_DEBIT_TRANSACTIONS v_DEBIT_TRANSACTIONS)
        {
            base.AddObject("V_DEBIT_TRANSACTIONS", v_DEBIT_TRANSACTIONS);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the V_OPENBALANCE_TRANSACTIONLIST EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToV_OPENBALANCE_TRANSACTIONLIST(V_OPENBALANCE_TRANSACTIONLIST v_OPENBALANCE_TRANSACTIONLIST)
        {
            base.AddObject("V_OPENBALANCE_TRANSACTIONLIST", v_OPENBALANCE_TRANSACTIONLIST);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the V_SELLER_BUYER_OPENINGBALANCE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToV_SELLER_BUYER_OPENINGBALANCE(V_SELLER_BUYER_OPENINGBALANCE v_SELLER_BUYER_OPENINGBALANCE)
        {
            base.AddObject("V_SELLER_BUYER_OPENINGBALANCE", v_SELLER_BUYER_OPENINGBALANCE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the V_SUM_TRANSACTION EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToV_SUM_TRANSACTION(V_SUM_TRANSACTION v_SUM_TRANSACTION)
        {
            base.AddObject("V_SUM_TRANSACTION", v_SUM_TRANSACTION);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the V_TRANSACTIONDETAILOFSHAREHOLDERSEARCH EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToV_TRANSACTIONDETAILOFSHAREHOLDERSEARCH(V_TRANSACTIONDETAILOFSHAREHOLDERSEARCH v_TRANSACTIONDETAILOFSHAREHOLDERSEARCH)
        {
            base.AddObject("V_TRANSACTIONDETAILOFSHAREHOLDERSEARCH", v_TRANSACTIONDETAILOFSHAREHOLDERSEARCH);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShareHolderManagerModel", Name="Bank")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Bank : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Bank object.
        /// </summary>
        /// <param name="bankId">Initial value of the BankId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        public static Bank CreateBank(global::System.Int32 bankId, global::System.String name, global::System.String address)
        {
            Bank bank = new Bank();
            bank.BankId = bankId;
            bank.Name = name;
            bank.Address = address;
            return bank;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BankId
        {
            get
            {
                return _BankId;
            }
            set
            {
                if (_BankId != value)
                {
                    OnBankIdChanging(value);
                    ReportPropertyChanging("BankId");
                    _BankId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BankId");
                    OnBankIdChanged();
                }
            }
        }
        private global::System.Int32 _BankId;
        partial void OnBankIdChanging(global::System.Int32 value);
        partial void OnBankIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Website
        {
            get
            {
                return _Website;
            }
            set
            {
                OnWebsiteChanging(value);
                ReportPropertyChanging("Website");
                _Website = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Website");
                OnWebsiteChanged();
            }
        }
        private global::System.String _Website;
        partial void OnWebsiteChanging(global::System.String value);
        partial void OnWebsiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShareHolderManagerModel", "FK_ShareHolder_BankId", "ShareHolder")]
        public EntityCollection<ShareHolder> ShareHolders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ShareHolder>("ShareHolderManagerModel.FK_ShareHolder_BankId", "ShareHolder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ShareHolder>("ShareHolderManagerModel.FK_ShareHolder_BankId", "ShareHolder", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShareHolderManagerModel", Name="City")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class City : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new City object.
        /// </summary>
        /// <param name="cityID">Initial value of the CityID property.</param>
        public static City CreateCity(global::System.Int32 cityID)
        {
            City city = new City();
            city.CityID = cityID;
            return city;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                if (_CityID != value)
                {
                    OnCityIDChanging(value);
                    ReportPropertyChanging("CityID");
                    _CityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CityID");
                    OnCityIDChanged();
                }
            }
        }
        private global::System.Int32 _CityID;
        partial void OnCityIDChanging(global::System.Int32 value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> LanguageID
        {
            get
            {
                return _LanguageID;
            }
            set
            {
                OnLanguageIDChanging(value);
                ReportPropertyChanging("LanguageID");
                _LanguageID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LanguageID");
                OnLanguageIDChanged();
            }
        }
        private Nullable<global::System.Byte> _LanguageID;
        partial void OnLanguageIDChanging(Nullable<global::System.Byte> value);
        partial void OnLanguageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShareHolderManagerModel", "FK_City_Language", "Language")]
        public Language Language
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("ShareHolderManagerModel.FK_City_Language", "Language").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("ShareHolderManagerModel.FK_City_Language", "Language").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Language> LanguageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("ShareHolderManagerModel.FK_City_Language", "Language");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Language>("ShareHolderManagerModel.FK_City_Language", "Language", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShareHolderManagerModel", "FK_LocationCity_City", "LocationCity")]
        public EntityCollection<LocationCity> LocationCities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LocationCity>("ShareHolderManagerModel.FK_LocationCity_City", "LocationCity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LocationCity>("ShareHolderManagerModel.FK_LocationCity_City", "LocationCity", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShareHolderManagerModel", Name="Company")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Company : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Company object.
        /// </summary>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="shareSymbol">Initial value of the ShareSymbol property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Company CreateCompany(global::System.Int32 companyId, global::System.String shareSymbol, global::System.String name)
        {
            Company company = new Company();
            company.CompanyId = companyId;
            company.ShareSymbol = shareSymbol;
            company.Name = name;
            return company;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                if (_CompanyId != value)
                {
                    OnCompanyIdChanging(value);
                    ReportPropertyChanging("CompanyId");
                    _CompanyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyId");
                    OnCompanyIdChanged();
                }
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ShareSymbol
        {
            get
            {
                return _ShareSymbol;
            }
            set
            {
                OnShareSymbolChanging(value);
                ReportPropertyChanging("ShareSymbol");
                _ShareSymbol = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ShareSymbol");
                OnShareSymbolChanged();
            }
        }
        private global::System.String _ShareSymbol;
        partial void OnShareSymbolChanging(global::System.String value);
        partial void OnShareSymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EnglishName
        {
            get
            {
                return _EnglishName;
            }
            set
            {
                OnEnglishNameChanging(value);
                ReportPropertyChanging("EnglishName");
                _EnglishName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EnglishName");
                OnEnglishNameChanged();
            }
        }
        private global::System.String _EnglishName;
        partial void OnEnglishNameChanging(global::System.String value);
        partial void OnEnglishNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Martket
        {
            get
            {
                return _Martket;
            }
            set
            {
                OnMartketChanging(value);
                ReportPropertyChanging("Martket");
                _Martket = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Martket");
                OnMartketChanged();
            }
        }
        private global::System.String _Martket;
        partial void OnMartketChanging(global::System.String value);
        partial void OnMartketChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> TotalShare
        {
            get
            {
                return _TotalShare;
            }
            set
            {
                OnTotalShareChanging(value);
                ReportPropertyChanging("TotalShare");
                _TotalShare = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalShare");
                OnTotalShareChanged();
            }
        }
        private Nullable<global::System.Int64> _TotalShare;
        partial void OnTotalShareChanging(Nullable<global::System.Int64> value);
        partial void OnTotalShareChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Telephone
        {
            get
            {
                return _Telephone;
            }
            set
            {
                OnTelephoneChanging(value);
                ReportPropertyChanging("Telephone");
                _Telephone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Telephone");
                OnTelephoneChanged();
            }
        }
        private global::System.String _Telephone;
        partial void OnTelephoneChanging(global::System.String value);
        partial void OnTelephoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Website
        {
            get
            {
                return _Website;
            }
            set
            {
                OnWebsiteChanging(value);
                ReportPropertyChanging("Website");
                _Website = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Website");
                OnWebsiteChanged();
            }
        }
        private global::System.String _Website;
        partial void OnWebsiteChanging(global::System.String value);
        partial void OnWebsiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Capital
        {
            get
            {
                return _Capital;
            }
            set
            {
                OnCapitalChanging(value);
                ReportPropertyChanging("Capital");
                _Capital = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Capital");
                OnCapitalChanged();
            }
        }
        private Nullable<global::System.Int64> _Capital;
        partial void OnCapitalChanging(Nullable<global::System.Int64> value);
        partial void OnCapitalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> IssueDate
        {
            get
            {
                return _IssueDate;
            }
            set
            {
                OnIssueDateChanging(value);
                ReportPropertyChanging("IssueDate");
                _IssueDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueDate");
                OnIssueDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _IssueDate;
        partial void OnIssueDateChanging(Nullable<global::System.DateTime> value);
        partial void OnIssueDateChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShareHolderManagerModel", Name="Language")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Language : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Language object.
        /// </summary>
        /// <param name="languageID">Initial value of the LanguageID property.</param>
        public static Language CreateLanguage(global::System.Byte languageID)
        {
            Language language = new Language();
            language.LanguageID = languageID;
            return language;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte LanguageID
        {
            get
            {
                return _LanguageID;
            }
            set
            {
                if (_LanguageID != value)
                {
                    OnLanguageIDChanging(value);
                    ReportPropertyChanging("LanguageID");
                    _LanguageID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LanguageID");
                    OnLanguageIDChanged();
                }
            }
        }
        private global::System.Byte _LanguageID;
        partial void OnLanguageIDChanging(global::System.Byte value);
        partial void OnLanguageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShareHolderManagerModel", "FK_City_Language", "City")]
        public EntityCollection<City> Cities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<City>("ShareHolderManagerModel.FK_City_Language", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<City>("ShareHolderManagerModel.FK_City_Language", "City", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShareHolderManagerModel", "FK_Location_Language", "Location")]
        public EntityCollection<Location> Locations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Location>("ShareHolderManagerModel.FK_Location_Language", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Location>("ShareHolderManagerModel.FK_Location_Language", "Location", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShareHolderManagerModel", Name="Location")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Location : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Location object.
        /// </summary>
        /// <param name="locationID">Initial value of the LocationID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Location CreateLocation(global::System.Int32 locationID, global::System.String name)
        {
            Location location = new Location();
            location.LocationID = locationID;
            location.Name = name;
            return location;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LocationID
        {
            get
            {
                return _LocationID;
            }
            set
            {
                if (_LocationID != value)
                {
                    OnLocationIDChanging(value);
                    ReportPropertyChanging("LocationID");
                    _LocationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LocationID");
                    OnLocationIDChanged();
                }
            }
        }
        private global::System.Int32 _LocationID;
        partial void OnLocationIDChanging(global::System.Int32 value);
        partial void OnLocationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> LanguageID
        {
            get
            {
                return _LanguageID;
            }
            set
            {
                OnLanguageIDChanging(value);
                ReportPropertyChanging("LanguageID");
                _LanguageID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LanguageID");
                OnLanguageIDChanged();
            }
        }
        private Nullable<global::System.Byte> _LanguageID;
        partial void OnLanguageIDChanging(Nullable<global::System.Byte> value);
        partial void OnLanguageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShareHolderManagerModel", "FK_Location_Language", "Language")]
        public Language Language
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("ShareHolderManagerModel.FK_Location_Language", "Language").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("ShareHolderManagerModel.FK_Location_Language", "Language").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Language> LanguageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("ShareHolderManagerModel.FK_Location_Language", "Language");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Language>("ShareHolderManagerModel.FK_Location_Language", "Language", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShareHolderManagerModel", "FK_LocationCity_Location", "LocationCity")]
        public EntityCollection<LocationCity> LocationCities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LocationCity>("ShareHolderManagerModel.FK_LocationCity_Location", "LocationCity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LocationCity>("ShareHolderManagerModel.FK_LocationCity_Location", "LocationCity", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShareHolderManagerModel", Name="LocationCity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LocationCity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LocationCity object.
        /// </summary>
        /// <param name="locationID">Initial value of the LocationID property.</param>
        /// <param name="cityID">Initial value of the CityID property.</param>
        /// <param name="locationCityID">Initial value of the LocationCityID property.</param>
        public static LocationCity CreateLocationCity(global::System.Int32 locationID, global::System.Int32 cityID, global::System.Int32 locationCityID)
        {
            LocationCity locationCity = new LocationCity();
            locationCity.LocationID = locationID;
            locationCity.CityID = cityID;
            locationCity.LocationCityID = locationCityID;
            return locationCity;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LocationID
        {
            get
            {
                return _LocationID;
            }
            set
            {
                OnLocationIDChanging(value);
                ReportPropertyChanging("LocationID");
                _LocationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocationID");
                OnLocationIDChanged();
            }
        }
        private global::System.Int32 _LocationID;
        partial void OnLocationIDChanging(global::System.Int32 value);
        partial void OnLocationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                OnCityIDChanging(value);
                ReportPropertyChanging("CityID");
                _CityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CityID");
                OnCityIDChanged();
            }
        }
        private global::System.Int32 _CityID;
        partial void OnCityIDChanging(global::System.Int32 value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LocationCityID
        {
            get
            {
                return _LocationCityID;
            }
            set
            {
                if (_LocationCityID != value)
                {
                    OnLocationCityIDChanging(value);
                    ReportPropertyChanging("LocationCityID");
                    _LocationCityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LocationCityID");
                    OnLocationCityIDChanged();
                }
            }
        }
        private global::System.Int32 _LocationCityID;
        partial void OnLocationCityIDChanging(global::System.Int32 value);
        partial void OnLocationCityIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShareHolderManagerModel", "FK_LocationCity_City", "City")]
        public City City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("ShareHolderManagerModel.FK_LocationCity_City", "City").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("ShareHolderManagerModel.FK_LocationCity_City", "City").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> CityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("ShareHolderManagerModel.FK_LocationCity_City", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("ShareHolderManagerModel.FK_LocationCity_City", "City", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShareHolderManagerModel", "FK_LocationCity_Location", "Location")]
        public Location Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("ShareHolderManagerModel.FK_LocationCity_Location", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("ShareHolderManagerModel.FK_LocationCity_Location", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> LocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("ShareHolderManagerModel.FK_LocationCity_Location", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("ShareHolderManagerModel.FK_LocationCity_Location", "Location", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShareHolderManagerModel", Name="Membership")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Membership : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Membership object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="isApproved">Initial value of the IsApproved property.</param>
        /// <param name="isLockedOut">Initial value of the IsLockedOut property.</param>
        /// <param name="lastLoginDate">Initial value of the LastLoginDate property.</param>
        public static Membership CreateMembership(global::System.Guid userId, global::System.String userName, global::System.String password, global::System.Boolean isApproved, global::System.Boolean isLockedOut, global::System.DateTime lastLoginDate)
        {
            Membership membership = new Membership();
            membership.UserId = userId;
            membership.UserName = userName;
            membership.Password = password;
            membership.IsApproved = isApproved;
            membership.IsLockedOut = isLockedOut;
            membership.LastLoginDate = lastLoginDate;
            return membership;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PasswordFormat
        {
            get
            {
                return _PasswordFormat;
            }
            set
            {
                OnPasswordFormatChanging(value);
                ReportPropertyChanging("PasswordFormat");
                _PasswordFormat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PasswordFormat");
                OnPasswordFormatChanged();
            }
        }
        private Nullable<global::System.Int32> _PasswordFormat;
        partial void OnPasswordFormatChanging(Nullable<global::System.Int32> value);
        partial void OnPasswordFormatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordSalt
        {
            get
            {
                return _PasswordSalt;
            }
            set
            {
                OnPasswordSaltChanging(value);
                ReportPropertyChanging("PasswordSalt");
                _PasswordSalt = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordSalt");
                OnPasswordSaltChanged();
            }
        }
        private global::System.String _PasswordSalt;
        partial void OnPasswordSaltChanging(global::System.String value);
        partial void OnPasswordSaltChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobilePIN
        {
            get
            {
                return _MobilePIN;
            }
            set
            {
                OnMobilePINChanging(value);
                ReportPropertyChanging("MobilePIN");
                _MobilePIN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobilePIN");
                OnMobilePINChanged();
            }
        }
        private global::System.String _MobilePIN;
        partial void OnMobilePINChanging(global::System.String value);
        partial void OnMobilePINChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordQuestion
        {
            get
            {
                return _PasswordQuestion;
            }
            set
            {
                OnPasswordQuestionChanging(value);
                ReportPropertyChanging("PasswordQuestion");
                _PasswordQuestion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordQuestion");
                OnPasswordQuestionChanged();
            }
        }
        private global::System.String _PasswordQuestion;
        partial void OnPasswordQuestionChanging(global::System.String value);
        partial void OnPasswordQuestionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordAnswer
        {
            get
            {
                return _PasswordAnswer;
            }
            set
            {
                OnPasswordAnswerChanging(value);
                ReportPropertyChanging("PasswordAnswer");
                _PasswordAnswer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordAnswer");
                OnPasswordAnswerChanged();
            }
        }
        private global::System.String _PasswordAnswer;
        partial void OnPasswordAnswerChanging(global::System.String value);
        partial void OnPasswordAnswerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                OnIsApprovedChanging(value);
                ReportPropertyChanging("IsApproved");
                _IsApproved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsApproved");
                OnIsApprovedChanged();
            }
        }
        private global::System.Boolean _IsApproved;
        partial void OnIsApprovedChanging(global::System.Boolean value);
        partial void OnIsApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsLockedOut
        {
            get
            {
                return _IsLockedOut;
            }
            set
            {
                OnIsLockedOutChanging(value);
                ReportPropertyChanging("IsLockedOut");
                _IsLockedOut = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLockedOut");
                OnIsLockedOutChanged();
            }
        }
        private global::System.Boolean _IsLockedOut;
        partial void OnIsLockedOutChanging(global::System.Boolean value);
        partial void OnIsLockedOutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateDate;
        partial void OnCreateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLoginDate
        {
            get
            {
                return _LastLoginDate;
            }
            set
            {
                OnLastLoginDateChanging(value);
                ReportPropertyChanging("LastLoginDate");
                _LastLoginDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLoginDate");
                OnLastLoginDateChanged();
            }
        }
        private global::System.DateTime _LastLoginDate;
        partial void OnLastLoginDateChanging(global::System.DateTime value);
        partial void OnLastLoginDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastPasswordChangedDate
        {
            get
            {
                return _LastPasswordChangedDate;
            }
            set
            {
                OnLastPasswordChangedDateChanging(value);
                ReportPropertyChanging("LastPasswordChangedDate");
                _LastPasswordChangedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastPasswordChangedDate");
                OnLastPasswordChangedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastPasswordChangedDate;
        partial void OnLastPasswordChangedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastPasswordChangedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastLockoutDate
        {
            get
            {
                return _LastLockoutDate;
            }
            set
            {
                OnLastLockoutDateChanging(value);
                ReportPropertyChanging("LastLockoutDate");
                _LastLockoutDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLockoutDate");
                OnLastLockoutDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastLockoutDate;
        partial void OnLastLockoutDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastLockoutDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FailedPasswordAttemptCount
        {
            get
            {
                return _FailedPasswordAttemptCount;
            }
            set
            {
                OnFailedPasswordAttemptCountChanging(value);
                ReportPropertyChanging("FailedPasswordAttemptCount");
                _FailedPasswordAttemptCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAttemptCount");
                OnFailedPasswordAttemptCountChanged();
            }
        }
        private Nullable<global::System.Int32> _FailedPasswordAttemptCount;
        partial void OnFailedPasswordAttemptCountChanging(Nullable<global::System.Int32> value);
        partial void OnFailedPasswordAttemptCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FailedPasswordAttemptWindowStart
        {
            get
            {
                return _FailedPasswordAttemptWindowStart;
            }
            set
            {
                OnFailedPasswordAttemptWindowStartChanging(value);
                ReportPropertyChanging("FailedPasswordAttemptWindowStart");
                _FailedPasswordAttemptWindowStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAttemptWindowStart");
                OnFailedPasswordAttemptWindowStartChanged();
            }
        }
        private Nullable<global::System.DateTime> _FailedPasswordAttemptWindowStart;
        partial void OnFailedPasswordAttemptWindowStartChanging(Nullable<global::System.DateTime> value);
        partial void OnFailedPasswordAttemptWindowStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FailedPasswordAnswerAttemptCount
        {
            get
            {
                return _FailedPasswordAnswerAttemptCount;
            }
            set
            {
                OnFailedPasswordAnswerAttemptCountChanging(value);
                ReportPropertyChanging("FailedPasswordAnswerAttemptCount");
                _FailedPasswordAnswerAttemptCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAnswerAttemptCount");
                OnFailedPasswordAnswerAttemptCountChanged();
            }
        }
        private Nullable<global::System.Int32> _FailedPasswordAnswerAttemptCount;
        partial void OnFailedPasswordAnswerAttemptCountChanging(Nullable<global::System.Int32> value);
        partial void OnFailedPasswordAnswerAttemptCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FailedPasswordAnswerAttemptWindowStart
        {
            get
            {
                return _FailedPasswordAnswerAttemptWindowStart;
            }
            set
            {
                OnFailedPasswordAnswerAttemptWindowStartChanging(value);
                ReportPropertyChanging("FailedPasswordAnswerAttemptWindowStart");
                _FailedPasswordAnswerAttemptWindowStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
                OnFailedPasswordAnswerAttemptWindowStartChanged();
            }
        }
        private Nullable<global::System.DateTime> _FailedPasswordAnswerAttemptWindowStart;
        partial void OnFailedPasswordAnswerAttemptWindowStartChanging(Nullable<global::System.DateTime> value);
        partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LoginId
        {
            get
            {
                return _LoginId;
            }
            set
            {
                OnLoginIdChanging(value);
                ReportPropertyChanging("LoginId");
                _LoginId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LoginId");
                OnLoginIdChanged();
            }
        }
        private global::System.String _LoginId;
        partial void OnLoginIdChanging(global::System.String value);
        partial void OnLoginIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LoginCount
        {
            get
            {
                return _LoginCount;
            }
            set
            {
                OnLoginCountChanging(value);
                ReportPropertyChanging("LoginCount");
                _LoginCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoginCount");
                OnLoginCountChanged();
            }
        }
        private Nullable<global::System.Int32> _LoginCount;
        partial void OnLoginCountChanging(Nullable<global::System.Int32> value);
        partial void OnLoginCountChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShareHolderManagerModel", "FK_ShareHolder_Membership", "ShareHolder")]
        public EntityCollection<ShareHolder> ShareHolders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ShareHolder>("ShareHolderManagerModel.FK_ShareHolder_Membership", "ShareHolder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ShareHolder>("ShareHolderManagerModel.FK_ShareHolder_Membership", "ShareHolder", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShareHolderManagerModel", Name="ShareHolder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ShareHolder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ShareHolder object.
        /// </summary>
        /// <param name="shareHolderId">Initial value of the ShareHolderId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="sSN">Initial value of the SSN property.</param>
        public static ShareHolder CreateShareHolder(global::System.Int32 shareHolderId, global::System.String name, global::System.String address, global::System.String sSN)
        {
            ShareHolder shareHolder = new ShareHolder();
            shareHolder.ShareHolderId = shareHolderId;
            shareHolder.Name = name;
            shareHolder.Address = address;
            shareHolder.SSN = sSN;
            return shareHolder;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ShareHolderId
        {
            get
            {
                return _ShareHolderId;
            }
            set
            {
                if (_ShareHolderId != value)
                {
                    OnShareHolderIdChanging(value);
                    ReportPropertyChanging("ShareHolderId");
                    _ShareHolderId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ShareHolderId");
                    OnShareHolderIdChanged();
                }
            }
        }
        private global::System.Int32 _ShareHolderId;
        partial void OnShareHolderIdChanging(global::System.Int32 value);
        partial void OnShareHolderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Mobile
        {
            get
            {
                return _Mobile;
            }
            set
            {
                OnMobileChanging(value);
                ReportPropertyChanging("Mobile");
                _Mobile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Mobile");
                OnMobileChanged();
            }
        }
        private global::System.String _Mobile;
        partial void OnMobileChanging(global::System.String value);
        partial void OnMobileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SSN
        {
            get
            {
                return _SSN;
            }
            set
            {
                OnSSNChanging(value);
                ReportPropertyChanging("SSN");
                _SSN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SSN");
                OnSSNChanged();
            }
        }
        private global::System.String _SSN;
        partial void OnSSNChanging(global::System.String value);
        partial void OnSSNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Nationality
        {
            get
            {
                return _Nationality;
            }
            set
            {
                OnNationalityChanging(value);
                ReportPropertyChanging("Nationality");
                _Nationality = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Nationality");
                OnNationalityChanged();
            }
        }
        private global::System.String _Nationality;
        partial void OnNationalityChanging(global::System.String value);
        partial void OnNationalityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ShareHolderGroupId
        {
            get
            {
                return _ShareHolderGroupId;
            }
            set
            {
                OnShareHolderGroupIdChanging(value);
                ReportPropertyChanging("ShareHolderGroupId");
                _ShareHolderGroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShareHolderGroupId");
                OnShareHolderGroupIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ShareHolderGroupId;
        partial void OnShareHolderGroupIdChanging(Nullable<global::System.Int32> value);
        partial void OnShareHolderGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShareHolderCode
        {
            get
            {
                return _ShareHolderCode;
            }
            set
            {
                OnShareHolderCodeChanging(value);
                ReportPropertyChanging("ShareHolderCode");
                _ShareHolderCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShareHolderCode");
                OnShareHolderCodeChanged();
            }
        }
        private global::System.String _ShareHolderCode;
        partial void OnShareHolderCodeChanging(global::System.String value);
        partial void OnShareHolderCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DOB
        {
            get
            {
                return _DOB;
            }
            set
            {
                OnDOBChanging(value);
                ReportPropertyChanging("DOB");
                _DOB = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DOB");
                OnDOBChanged();
            }
        }
        private Nullable<global::System.DateTime> _DOB;
        partial void OnDOBChanging(Nullable<global::System.DateTime> value);
        partial void OnDOBChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BirthPlace
        {
            get
            {
                return _BirthPlace;
            }
            set
            {
                OnBirthPlaceChanging(value);
                ReportPropertyChanging("BirthPlace");
                _BirthPlace = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BirthPlace");
                OnBirthPlaceChanged();
            }
        }
        private global::System.String _BirthPlace;
        partial void OnBirthPlaceChanging(global::System.String value);
        partial void OnBirthPlaceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WorkPlace
        {
            get
            {
                return _WorkPlace;
            }
            set
            {
                OnWorkPlaceChanging(value);
                ReportPropertyChanging("WorkPlace");
                _WorkPlace = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WorkPlace");
                OnWorkPlaceChanged();
            }
        }
        private global::System.String _WorkPlace;
        partial void OnWorkPlaceChanging(global::System.String value);
        partial void OnWorkPlaceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> IssueDate
        {
            get
            {
                return _IssueDate;
            }
            set
            {
                OnIssueDateChanging(value);
                ReportPropertyChanging("IssueDate");
                _IssueDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueDate");
                OnIssueDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _IssueDate;
        partial void OnIssueDateChanging(Nullable<global::System.DateTime> value);
        partial void OnIssueDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IssuePlace
        {
            get
            {
                return _IssuePlace;
            }
            set
            {
                OnIssuePlaceChanging(value);
                ReportPropertyChanging("IssuePlace");
                _IssuePlace = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IssuePlace");
                OnIssuePlaceChanged();
            }
        }
        private global::System.String _IssuePlace;
        partial void OnIssuePlaceChanging(global::System.String value);
        partial void OnIssuePlaceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactAddress
        {
            get
            {
                return _ContactAddress;
            }
            set
            {
                OnContactAddressChanging(value);
                ReportPropertyChanging("ContactAddress");
                _ContactAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactAddress");
                OnContactAddressChanged();
            }
        }
        private global::System.String _ContactAddress;
        partial void OnContactAddressChanging(global::System.String value);
        partial void OnContactAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RepTradingPerson
        {
            get
            {
                return _RepTradingPerson;
            }
            set
            {
                OnRepTradingPersonChanging(value);
                ReportPropertyChanging("RepTradingPerson");
                _RepTradingPerson = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RepTradingPerson");
                OnRepTradingPersonChanged();
            }
        }
        private global::System.String _RepTradingPerson;
        partial void OnRepTradingPersonChanging(global::System.String value);
        partial void OnRepTradingPersonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RepSSN
        {
            get
            {
                return _RepSSN;
            }
            set
            {
                OnRepSSNChanging(value);
                ReportPropertyChanging("RepSSN");
                _RepSSN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RepSSN");
                OnRepSSNChanged();
            }
        }
        private global::System.String _RepSSN;
        partial void OnRepSSNChanging(global::System.String value);
        partial void OnRepSSNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RepIssueDate
        {
            get
            {
                return _RepIssueDate;
            }
            set
            {
                OnRepIssueDateChanging(value);
                ReportPropertyChanging("RepIssueDate");
                _RepIssueDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RepIssueDate");
                OnRepIssueDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _RepIssueDate;
        partial void OnRepIssueDateChanging(Nullable<global::System.DateTime> value);
        partial void OnRepIssueDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RepIssuePlace
        {
            get
            {
                return _RepIssuePlace;
            }
            set
            {
                OnRepIssuePlaceChanging(value);
                ReportPropertyChanging("RepIssuePlace");
                _RepIssuePlace = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RepIssuePlace");
                OnRepIssuePlaceChanged();
            }
        }
        private global::System.String _RepIssuePlace;
        partial void OnRepIssuePlaceChanging(global::System.String value);
        partial void OnRepIssuePlaceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address2
        {
            get
            {
                return _Address2;
            }
            set
            {
                OnAddress2Changing(value);
                ReportPropertyChanging("Address2");
                _Address2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address2");
                OnAddress2Changed();
            }
        }
        private global::System.String _Address2;
        partial void OnAddress2Changing(global::System.String value);
        partial void OnAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.String _Gender;
        partial void OnGenderChanging(global::System.String value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AddressCityId
        {
            get
            {
                return _AddressCityId;
            }
            set
            {
                OnAddressCityIdChanging(value);
                ReportPropertyChanging("AddressCityId");
                _AddressCityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddressCityId");
                OnAddressCityIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AddressCityId;
        partial void OnAddressCityIdChanging(Nullable<global::System.Int32> value);
        partial void OnAddressCityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AddressLocationId
        {
            get
            {
                return _AddressLocationId;
            }
            set
            {
                OnAddressLocationIdChanging(value);
                ReportPropertyChanging("AddressLocationId");
                _AddressLocationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddressLocationId");
                OnAddressLocationIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AddressLocationId;
        partial void OnAddressLocationIdChanging(Nullable<global::System.Int32> value);
        partial void OnAddressLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Address2CityId
        {
            get
            {
                return _Address2CityId;
            }
            set
            {
                OnAddress2CityIdChanging(value);
                ReportPropertyChanging("Address2CityId");
                _Address2CityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Address2CityId");
                OnAddress2CityIdChanged();
            }
        }
        private Nullable<global::System.Int32> _Address2CityId;
        partial void OnAddress2CityIdChanging(Nullable<global::System.Int32> value);
        partial void OnAddress2CityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Address2LocationId
        {
            get
            {
                return _Address2LocationId;
            }
            set
            {
                OnAddress2LocationIdChanging(value);
                ReportPropertyChanging("Address2LocationId");
                _Address2LocationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Address2LocationId");
                OnAddress2LocationIdChanged();
            }
        }
        private Nullable<global::System.Int32> _Address2LocationId;
        partial void OnAddress2LocationIdChanging(Nullable<global::System.Int32> value);
        partial void OnAddress2LocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BankAccountNumber
        {
            get
            {
                return _BankAccountNumber;
            }
            set
            {
                OnBankAccountNumberChanging(value);
                ReportPropertyChanging("BankAccountNumber");
                _BankAccountNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BankAccountNumber");
                OnBankAccountNumberChanged();
            }
        }
        private global::System.String _BankAccountNumber;
        partial void OnBankAccountNumberChanging(global::System.String value);
        partial void OnBankAccountNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BankId
        {
            get
            {
                return _BankId;
            }
            set
            {
                OnBankIdChanging(value);
                ReportPropertyChanging("BankId");
                _BankId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BankId");
                OnBankIdChanged();
            }
        }
        private Nullable<global::System.Int32> _BankId;
        partial void OnBankIdChanging(Nullable<global::System.Int32> value);
        partial void OnBankIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Guid> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Guid> value);
        partial void OnUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShareHolderManagerModel", "FK_ShareHolder_BankId", "Bank")]
        public Bank Bank
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bank>("ShareHolderManagerModel.FK_ShareHolder_BankId", "Bank").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bank>("ShareHolderManagerModel.FK_ShareHolder_BankId", "Bank").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Bank> BankReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bank>("ShareHolderManagerModel.FK_ShareHolder_BankId", "Bank");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Bank>("ShareHolderManagerModel.FK_ShareHolder_BankId", "Bank", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShareHolderManagerModel", "FK_ShareHolder_Membership", "Membership")]
        public Membership Membership
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Membership>("ShareHolderManagerModel.FK_ShareHolder_Membership", "Membership").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Membership>("ShareHolderManagerModel.FK_ShareHolder_Membership", "Membership").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Membership> MembershipReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Membership>("ShareHolderManagerModel.FK_ShareHolder_Membership", "Membership");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Membership>("ShareHolderManagerModel.FK_ShareHolder_Membership", "Membership", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShareHolderManagerModel", "FK_ShareHolder_ShareHolderGroupId", "ShareHolderGroup")]
        public ShareHolderGroup ShareHolderGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ShareHolderGroup>("ShareHolderManagerModel.FK_ShareHolder_ShareHolderGroupId", "ShareHolderGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ShareHolderGroup>("ShareHolderManagerModel.FK_ShareHolder_ShareHolderGroupId", "ShareHolderGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ShareHolderGroup> ShareHolderGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ShareHolderGroup>("ShareHolderManagerModel.FK_ShareHolder_ShareHolderGroupId", "ShareHolderGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ShareHolderGroup>("ShareHolderManagerModel.FK_ShareHolder_ShareHolderGroupId", "ShareHolderGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShareHolderManagerModel", "FK_ShareHolderId_TransactionDetail", "TransactionDetail")]
        public EntityCollection<TransactionDetail> TransactionDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TransactionDetail>("ShareHolderManagerModel.FK_ShareHolderId_TransactionDetail", "TransactionDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TransactionDetail>("ShareHolderManagerModel.FK_ShareHolderId_TransactionDetail", "TransactionDetail", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShareHolderManagerModel", Name="ShareHolderGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ShareHolderGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ShareHolderGroup object.
        /// </summary>
        /// <param name="shareHolderGroupId">Initial value of the ShareHolderGroupId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ShareHolderGroup CreateShareHolderGroup(global::System.Int32 shareHolderGroupId, global::System.String name)
        {
            ShareHolderGroup shareHolderGroup = new ShareHolderGroup();
            shareHolderGroup.ShareHolderGroupId = shareHolderGroupId;
            shareHolderGroup.Name = name;
            return shareHolderGroup;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ShareHolderGroupId
        {
            get
            {
                return _ShareHolderGroupId;
            }
            set
            {
                if (_ShareHolderGroupId != value)
                {
                    OnShareHolderGroupIdChanging(value);
                    ReportPropertyChanging("ShareHolderGroupId");
                    _ShareHolderGroupId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ShareHolderGroupId");
                    OnShareHolderGroupIdChanged();
                }
            }
        }
        private global::System.Int32 _ShareHolderGroupId;
        partial void OnShareHolderGroupIdChanging(global::System.Int32 value);
        partial void OnShareHolderGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShareHolderManagerModel", "FK_ShareHolder_ShareHolderGroupId", "ShareHolder")]
        public EntityCollection<ShareHolder> ShareHolders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ShareHolder>("ShareHolderManagerModel.FK_ShareHolder_ShareHolderGroupId", "ShareHolder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ShareHolder>("ShareHolderManagerModel.FK_ShareHolder_ShareHolderGroupId", "ShareHolder", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShareHolderManagerModel", Name="ShareType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ShareType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ShareType object.
        /// </summary>
        /// <param name="shareTypeId">Initial value of the ShareTypeId property.</param>
        public static ShareType CreateShareType(global::System.Int32 shareTypeId)
        {
            ShareType shareType = new ShareType();
            shareType.ShareTypeId = shareTypeId;
            return shareType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ShareTypeId
        {
            get
            {
                return _ShareTypeId;
            }
            set
            {
                if (_ShareTypeId != value)
                {
                    OnShareTypeIdChanging(value);
                    ReportPropertyChanging("ShareTypeId");
                    _ShareTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ShareTypeId");
                    OnShareTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _ShareTypeId;
        partial void OnShareTypeIdChanging(global::System.Int32 value);
        partial void OnShareTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShareHolderManagerModel", "FK_ShareTypeId_TransactionDetail", "TransactionDetail")]
        public EntityCollection<TransactionDetail> TransactionDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TransactionDetail>("ShareHolderManagerModel.FK_ShareTypeId_TransactionDetail", "TransactionDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TransactionDetail>("ShareHolderManagerModel.FK_ShareTypeId_TransactionDetail", "TransactionDetail", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShareHolderManagerModel", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShareHolderManagerModel", Name="TradingTransaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TradingTransaction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TradingTransaction object.
        /// </summary>
        /// <param name="transactionId">Initial value of the TransactionId property.</param>
        /// <param name="transactionNumber">Initial value of the TransactionNumber property.</param>
        public static TradingTransaction CreateTradingTransaction(global::System.Int64 transactionId, global::System.String transactionNumber)
        {
            TradingTransaction tradingTransaction = new TradingTransaction();
            tradingTransaction.TransactionId = transactionId;
            tradingTransaction.TransactionNumber = transactionNumber;
            return tradingTransaction;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TransactionId
        {
            get
            {
                return _TransactionId;
            }
            set
            {
                if (_TransactionId != value)
                {
                    OnTransactionIdChanging(value);
                    ReportPropertyChanging("TransactionId");
                    _TransactionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransactionId");
                    OnTransactionIdChanged();
                }
            }
        }
        private global::System.Int64 _TransactionId;
        partial void OnTransactionIdChanging(global::System.Int64 value);
        partial void OnTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TransactionNumber
        {
            get
            {
                return _TransactionNumber;
            }
            set
            {
                OnTransactionNumberChanging(value);
                ReportPropertyChanging("TransactionNumber");
                _TransactionNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TransactionNumber");
                OnTransactionNumberChanged();
            }
        }
        private global::System.String _TransactionNumber;
        partial void OnTransactionNumberChanging(global::System.String value);
        partial void OnTransactionNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TransactionDate
        {
            get
            {
                return _TransactionDate;
            }
            set
            {
                OnTransactionDateChanging(value);
                ReportPropertyChanging("TransactionDate");
                _TransactionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionDate");
                OnTransactionDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _TransactionDate;
        partial void OnTransactionDateChanging(Nullable<global::System.DateTime> value);
        partial void OnTransactionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TransactionCategoryId
        {
            get
            {
                return _TransactionCategoryId;
            }
            set
            {
                OnTransactionCategoryIdChanging(value);
                ReportPropertyChanging("TransactionCategoryId");
                _TransactionCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionCategoryId");
                OnTransactionCategoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TransactionCategoryId;
        partial void OnTransactionCategoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnTransactionCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShareHolderManagerModel", "FK_TransactionCategoryId_Transaction", "TransactionCategory")]
        public TransactionCategory TransactionCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransactionCategory>("ShareHolderManagerModel.FK_TransactionCategoryId_Transaction", "TransactionCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransactionCategory>("ShareHolderManagerModel.FK_TransactionCategoryId_Transaction", "TransactionCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TransactionCategory> TransactionCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransactionCategory>("ShareHolderManagerModel.FK_TransactionCategoryId_Transaction", "TransactionCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TransactionCategory>("ShareHolderManagerModel.FK_TransactionCategoryId_Transaction", "TransactionCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShareHolderManagerModel", "FK_TransactionId_TransactionDetail", "TransactionDetail")]
        public EntityCollection<TransactionDetail> TransactionDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TransactionDetail>("ShareHolderManagerModel.FK_TransactionId_TransactionDetail", "TransactionDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TransactionDetail>("ShareHolderManagerModel.FK_TransactionId_TransactionDetail", "TransactionDetail", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShareHolderManagerModel", Name="TransactionCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TransactionCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TransactionCategory object.
        /// </summary>
        /// <param name="transactionCategoryId">Initial value of the TransactionCategoryId property.</param>
        public static TransactionCategory CreateTransactionCategory(global::System.Int32 transactionCategoryId)
        {
            TransactionCategory transactionCategory = new TransactionCategory();
            transactionCategory.TransactionCategoryId = transactionCategoryId;
            return transactionCategory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransactionCategoryId
        {
            get
            {
                return _TransactionCategoryId;
            }
            set
            {
                if (_TransactionCategoryId != value)
                {
                    OnTransactionCategoryIdChanging(value);
                    ReportPropertyChanging("TransactionCategoryId");
                    _TransactionCategoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransactionCategoryId");
                    OnTransactionCategoryIdChanged();
                }
            }
        }
        private global::System.Int32 _TransactionCategoryId;
        partial void OnTransactionCategoryIdChanging(global::System.Int32 value);
        partial void OnTransactionCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShareHolderManagerModel", "FK_TransactionCategoryId_Transaction", "TradingTransaction")]
        public EntityCollection<TradingTransaction> TradingTransactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TradingTransaction>("ShareHolderManagerModel.FK_TransactionCategoryId_Transaction", "TradingTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TradingTransaction>("ShareHolderManagerModel.FK_TransactionCategoryId_Transaction", "TradingTransaction", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShareHolderManagerModel", Name="TransactionDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TransactionDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TransactionDetail object.
        /// </summary>
        /// <param name="transactionDetailId">Initial value of the TransactionDetailId property.</param>
        /// <param name="transactionId">Initial value of the TransactionId property.</param>
        /// <param name="shareSymbol">Initial value of the ShareSymbol property.</param>
        public static TransactionDetail CreateTransactionDetail(global::System.Int64 transactionDetailId, global::System.Int64 transactionId, global::System.String shareSymbol)
        {
            TransactionDetail transactionDetail = new TransactionDetail();
            transactionDetail.TransactionDetailId = transactionDetailId;
            transactionDetail.TransactionId = transactionId;
            transactionDetail.ShareSymbol = shareSymbol;
            return transactionDetail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TransactionDetailId
        {
            get
            {
                return _TransactionDetailId;
            }
            set
            {
                if (_TransactionDetailId != value)
                {
                    OnTransactionDetailIdChanging(value);
                    ReportPropertyChanging("TransactionDetailId");
                    _TransactionDetailId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransactionDetailId");
                    OnTransactionDetailIdChanged();
                }
            }
        }
        private global::System.Int64 _TransactionDetailId;
        partial void OnTransactionDetailIdChanging(global::System.Int64 value);
        partial void OnTransactionDetailIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TransactionId
        {
            get
            {
                return _TransactionId;
            }
            set
            {
                OnTransactionIdChanging(value);
                ReportPropertyChanging("TransactionId");
                _TransactionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionId");
                OnTransactionIdChanged();
            }
        }
        private global::System.Int64 _TransactionId;
        partial void OnTransactionIdChanging(global::System.Int64 value);
        partial void OnTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ShareSymbol
        {
            get
            {
                return _ShareSymbol;
            }
            set
            {
                OnShareSymbolChanging(value);
                ReportPropertyChanging("ShareSymbol");
                _ShareSymbol = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ShareSymbol");
                OnShareSymbolChanged();
            }
        }
        private global::System.String _ShareSymbol;
        partial void OnShareSymbolChanging(global::System.String value);
        partial void OnShareSymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ShareHolderId
        {
            get
            {
                return _ShareHolderId;
            }
            set
            {
                OnShareHolderIdChanging(value);
                ReportPropertyChanging("ShareHolderId");
                _ShareHolderId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShareHolderId");
                OnShareHolderIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ShareHolderId;
        partial void OnShareHolderIdChanging(Nullable<global::System.Int32> value);
        partial void OnShareHolderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ShareTypeId
        {
            get
            {
                return _ShareTypeId;
            }
            set
            {
                OnShareTypeIdChanging(value);
                ReportPropertyChanging("ShareTypeId");
                _ShareTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShareTypeId");
                OnShareTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ShareTypeId;
        partial void OnShareTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnShareTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TransactionType
        {
            get
            {
                return _TransactionType;
            }
            set
            {
                OnTransactionTypeChanging(value);
                ReportPropertyChanging("TransactionType");
                _TransactionType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TransactionType");
                OnTransactionTypeChanged();
            }
        }
        private global::System.String _TransactionType;
        partial void OnTransactionTypeChanging(global::System.String value);
        partial void OnTransactionTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Int64> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Int64> value);
        partial void OnQuantityChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShareHolderManagerModel", "FK_ShareHolderId_TransactionDetail", "ShareHolder")]
        public ShareHolder ShareHolder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ShareHolder>("ShareHolderManagerModel.FK_ShareHolderId_TransactionDetail", "ShareHolder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ShareHolder>("ShareHolderManagerModel.FK_ShareHolderId_TransactionDetail", "ShareHolder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ShareHolder> ShareHolderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ShareHolder>("ShareHolderManagerModel.FK_ShareHolderId_TransactionDetail", "ShareHolder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ShareHolder>("ShareHolderManagerModel.FK_ShareHolderId_TransactionDetail", "ShareHolder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShareHolderManagerModel", "FK_ShareTypeId_TransactionDetail", "ShareType")]
        public ShareType ShareType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ShareType>("ShareHolderManagerModel.FK_ShareTypeId_TransactionDetail", "ShareType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ShareType>("ShareHolderManagerModel.FK_ShareTypeId_TransactionDetail", "ShareType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ShareType> ShareTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ShareType>("ShareHolderManagerModel.FK_ShareTypeId_TransactionDetail", "ShareType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ShareType>("ShareHolderManagerModel.FK_ShareTypeId_TransactionDetail", "ShareType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShareHolderManagerModel", "FK_TransactionId_TransactionDetail", "TradingTransaction")]
        public TradingTransaction TradingTransaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TradingTransaction>("ShareHolderManagerModel.FK_TransactionId_TransactionDetail", "TradingTransaction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TradingTransaction>("ShareHolderManagerModel.FK_TransactionId_TransactionDetail", "TradingTransaction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TradingTransaction> TradingTransactionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TradingTransaction>("ShareHolderManagerModel.FK_TransactionId_TransactionDetail", "TradingTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TradingTransaction>("ShareHolderManagerModel.FK_TransactionId_TransactionDetail", "TradingTransaction", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShareHolderManagerModel", Name="V_CREDIT_TRANSACTIONLIST")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class V_CREDIT_TRANSACTIONLIST : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new V_CREDIT_TRANSACTIONLIST object.
        /// </summary>
        /// <param name="transactionId">Initial value of the TransactionId property.</param>
        /// <param name="transactionNumber">Initial value of the TransactionNumber property.</param>
        /// <param name="buyerName">Initial value of the BuyerName property.</param>
        /// <param name="buyerShareSymbol">Initial value of the BuyerShareSymbol property.</param>
        public static V_CREDIT_TRANSACTIONLIST CreateV_CREDIT_TRANSACTIONLIST(global::System.Int64 transactionId, global::System.String transactionNumber, global::System.String buyerName, global::System.String buyerShareSymbol)
        {
            V_CREDIT_TRANSACTIONLIST v_CREDIT_TRANSACTIONLIST = new V_CREDIT_TRANSACTIONLIST();
            v_CREDIT_TRANSACTIONLIST.TransactionId = transactionId;
            v_CREDIT_TRANSACTIONLIST.TransactionNumber = transactionNumber;
            v_CREDIT_TRANSACTIONLIST.BuyerName = buyerName;
            v_CREDIT_TRANSACTIONLIST.BuyerShareSymbol = buyerShareSymbol;
            return v_CREDIT_TRANSACTIONLIST;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TransactionId
        {
            get
            {
                return _TransactionId;
            }
            set
            {
                if (_TransactionId != value)
                {
                    OnTransactionIdChanging(value);
                    ReportPropertyChanging("TransactionId");
                    _TransactionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransactionId");
                    OnTransactionIdChanged();
                }
            }
        }
        private global::System.Int64 _TransactionId;
        partial void OnTransactionIdChanging(global::System.Int64 value);
        partial void OnTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TransactionNumber
        {
            get
            {
                return _TransactionNumber;
            }
            set
            {
                if (_TransactionNumber != value)
                {
                    OnTransactionNumberChanging(value);
                    ReportPropertyChanging("TransactionNumber");
                    _TransactionNumber = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TransactionNumber");
                    OnTransactionNumberChanged();
                }
            }
        }
        private global::System.String _TransactionNumber;
        partial void OnTransactionNumberChanging(global::System.String value);
        partial void OnTransactionNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TransactionDate
        {
            get
            {
                return _TransactionDate;
            }
            set
            {
                OnTransactionDateChanging(value);
                ReportPropertyChanging("TransactionDate");
                _TransactionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionDate");
                OnTransactionDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _TransactionDate;
        partial void OnTransactionDateChanging(Nullable<global::System.DateTime> value);
        partial void OnTransactionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TransactionCategoryId
        {
            get
            {
                return _TransactionCategoryId;
            }
            set
            {
                OnTransactionCategoryIdChanging(value);
                ReportPropertyChanging("TransactionCategoryId");
                _TransactionCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionCategoryId");
                OnTransactionCategoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TransactionCategoryId;
        partial void OnTransactionCategoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnTransactionCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BuyerName
        {
            get
            {
                return _BuyerName;
            }
            set
            {
                if (_BuyerName != value)
                {
                    OnBuyerNameChanging(value);
                    ReportPropertyChanging("BuyerName");
                    _BuyerName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("BuyerName");
                    OnBuyerNameChanged();
                }
            }
        }
        private global::System.String _BuyerName;
        partial void OnBuyerNameChanging(global::System.String value);
        partial void OnBuyerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BuyerCode
        {
            get
            {
                return _BuyerCode;
            }
            set
            {
                OnBuyerCodeChanging(value);
                ReportPropertyChanging("BuyerCode");
                _BuyerCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BuyerCode");
                OnBuyerCodeChanged();
            }
        }
        private global::System.String _BuyerCode;
        partial void OnBuyerCodeChanging(global::System.String value);
        partial void OnBuyerCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BuyerShareSymbol
        {
            get
            {
                return _BuyerShareSymbol;
            }
            set
            {
                if (_BuyerShareSymbol != value)
                {
                    OnBuyerShareSymbolChanging(value);
                    ReportPropertyChanging("BuyerShareSymbol");
                    _BuyerShareSymbol = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("BuyerShareSymbol");
                    OnBuyerShareSymbolChanged();
                }
            }
        }
        private global::System.String _BuyerShareSymbol;
        partial void OnBuyerShareSymbolChanging(global::System.String value);
        partial void OnBuyerShareSymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Int64> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Int64> value);
        partial void OnQuantityChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShareHolderManagerModel", Name="V_CREDIT_TRANSACTIONS")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class V_CREDIT_TRANSACTIONS : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new V_CREDIT_TRANSACTIONS object.
        /// </summary>
        /// <param name="transactionDetailId">Initial value of the TransactionDetailId property.</param>
        /// <param name="transactionId">Initial value of the TransactionId property.</param>
        /// <param name="buyerShareSymbol">Initial value of the BuyerShareSymbol property.</param>
        /// <param name="buyerName">Initial value of the BuyerName property.</param>
        public static V_CREDIT_TRANSACTIONS CreateV_CREDIT_TRANSACTIONS(global::System.Int64 transactionDetailId, global::System.Int64 transactionId, global::System.String buyerShareSymbol, global::System.String buyerName)
        {
            V_CREDIT_TRANSACTIONS v_CREDIT_TRANSACTIONS = new V_CREDIT_TRANSACTIONS();
            v_CREDIT_TRANSACTIONS.TransactionDetailId = transactionDetailId;
            v_CREDIT_TRANSACTIONS.TransactionId = transactionId;
            v_CREDIT_TRANSACTIONS.BuyerShareSymbol = buyerShareSymbol;
            v_CREDIT_TRANSACTIONS.BuyerName = buyerName;
            return v_CREDIT_TRANSACTIONS;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TransactionDetailId
        {
            get
            {
                return _TransactionDetailId;
            }
            set
            {
                if (_TransactionDetailId != value)
                {
                    OnTransactionDetailIdChanging(value);
                    ReportPropertyChanging("TransactionDetailId");
                    _TransactionDetailId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransactionDetailId");
                    OnTransactionDetailIdChanged();
                }
            }
        }
        private global::System.Int64 _TransactionDetailId;
        partial void OnTransactionDetailIdChanging(global::System.Int64 value);
        partial void OnTransactionDetailIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TransactionId
        {
            get
            {
                return _TransactionId;
            }
            set
            {
                if (_TransactionId != value)
                {
                    OnTransactionIdChanging(value);
                    ReportPropertyChanging("TransactionId");
                    _TransactionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransactionId");
                    OnTransactionIdChanged();
                }
            }
        }
        private global::System.Int64 _TransactionId;
        partial void OnTransactionIdChanging(global::System.Int64 value);
        partial void OnTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BuyerShareSymbol
        {
            get
            {
                return _BuyerShareSymbol;
            }
            set
            {
                if (_BuyerShareSymbol != value)
                {
                    OnBuyerShareSymbolChanging(value);
                    ReportPropertyChanging("BuyerShareSymbol");
                    _BuyerShareSymbol = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("BuyerShareSymbol");
                    OnBuyerShareSymbolChanged();
                }
            }
        }
        private global::System.String _BuyerShareSymbol;
        partial void OnBuyerShareSymbolChanging(global::System.String value);
        partial void OnBuyerShareSymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BuyerId
        {
            get
            {
                return _BuyerId;
            }
            set
            {
                OnBuyerIdChanging(value);
                ReportPropertyChanging("BuyerId");
                _BuyerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BuyerId");
                OnBuyerIdChanged();
            }
        }
        private Nullable<global::System.Int32> _BuyerId;
        partial void OnBuyerIdChanging(Nullable<global::System.Int32> value);
        partial void OnBuyerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BuyerShareTypeId
        {
            get
            {
                return _BuyerShareTypeId;
            }
            set
            {
                OnBuyerShareTypeIdChanging(value);
                ReportPropertyChanging("BuyerShareTypeId");
                _BuyerShareTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BuyerShareTypeId");
                OnBuyerShareTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _BuyerShareTypeId;
        partial void OnBuyerShareTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnBuyerShareTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BuyerTransactionType
        {
            get
            {
                return _BuyerTransactionType;
            }
            set
            {
                OnBuyerTransactionTypeChanging(value);
                ReportPropertyChanging("BuyerTransactionType");
                _BuyerTransactionType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BuyerTransactionType");
                OnBuyerTransactionTypeChanged();
            }
        }
        private global::System.String _BuyerTransactionType;
        partial void OnBuyerTransactionTypeChanging(global::System.String value);
        partial void OnBuyerTransactionTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> BuyerQuanity
        {
            get
            {
                return _BuyerQuanity;
            }
            set
            {
                OnBuyerQuanityChanging(value);
                ReportPropertyChanging("BuyerQuanity");
                _BuyerQuanity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BuyerQuanity");
                OnBuyerQuanityChanged();
            }
        }
        private Nullable<global::System.Int64> _BuyerQuanity;
        partial void OnBuyerQuanityChanging(Nullable<global::System.Int64> value);
        partial void OnBuyerQuanityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BuyerName
        {
            get
            {
                return _BuyerName;
            }
            set
            {
                if (_BuyerName != value)
                {
                    OnBuyerNameChanging(value);
                    ReportPropertyChanging("BuyerName");
                    _BuyerName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("BuyerName");
                    OnBuyerNameChanged();
                }
            }
        }
        private global::System.String _BuyerName;
        partial void OnBuyerNameChanging(global::System.String value);
        partial void OnBuyerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BuyerCode
        {
            get
            {
                return _BuyerCode;
            }
            set
            {
                OnBuyerCodeChanging(value);
                ReportPropertyChanging("BuyerCode");
                _BuyerCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BuyerCode");
                OnBuyerCodeChanged();
            }
        }
        private global::System.String _BuyerCode;
        partial void OnBuyerCodeChanging(global::System.String value);
        partial void OnBuyerCodeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShareHolderManagerModel", Name="V_DEBIT_TRANSACTIONLIST")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class V_DEBIT_TRANSACTIONLIST : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new V_DEBIT_TRANSACTIONLIST object.
        /// </summary>
        /// <param name="transactionId">Initial value of the TransactionId property.</param>
        /// <param name="transactionNumber">Initial value of the TransactionNumber property.</param>
        /// <param name="sellerName">Initial value of the SellerName property.</param>
        /// <param name="shareSymbol">Initial value of the ShareSymbol property.</param>
        public static V_DEBIT_TRANSACTIONLIST CreateV_DEBIT_TRANSACTIONLIST(global::System.Int64 transactionId, global::System.String transactionNumber, global::System.String sellerName, global::System.String shareSymbol)
        {
            V_DEBIT_TRANSACTIONLIST v_DEBIT_TRANSACTIONLIST = new V_DEBIT_TRANSACTIONLIST();
            v_DEBIT_TRANSACTIONLIST.TransactionId = transactionId;
            v_DEBIT_TRANSACTIONLIST.TransactionNumber = transactionNumber;
            v_DEBIT_TRANSACTIONLIST.SellerName = sellerName;
            v_DEBIT_TRANSACTIONLIST.ShareSymbol = shareSymbol;
            return v_DEBIT_TRANSACTIONLIST;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TransactionId
        {
            get
            {
                return _TransactionId;
            }
            set
            {
                if (_TransactionId != value)
                {
                    OnTransactionIdChanging(value);
                    ReportPropertyChanging("TransactionId");
                    _TransactionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransactionId");
                    OnTransactionIdChanged();
                }
            }
        }
        private global::System.Int64 _TransactionId;
        partial void OnTransactionIdChanging(global::System.Int64 value);
        partial void OnTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TransactionNumber
        {
            get
            {
                return _TransactionNumber;
            }
            set
            {
                if (_TransactionNumber != value)
                {
                    OnTransactionNumberChanging(value);
                    ReportPropertyChanging("TransactionNumber");
                    _TransactionNumber = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TransactionNumber");
                    OnTransactionNumberChanged();
                }
            }
        }
        private global::System.String _TransactionNumber;
        partial void OnTransactionNumberChanging(global::System.String value);
        partial void OnTransactionNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TransactionDate
        {
            get
            {
                return _TransactionDate;
            }
            set
            {
                OnTransactionDateChanging(value);
                ReportPropertyChanging("TransactionDate");
                _TransactionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionDate");
                OnTransactionDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _TransactionDate;
        partial void OnTransactionDateChanging(Nullable<global::System.DateTime> value);
        partial void OnTransactionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TransactionCategoryId
        {
            get
            {
                return _TransactionCategoryId;
            }
            set
            {
                OnTransactionCategoryIdChanging(value);
                ReportPropertyChanging("TransactionCategoryId");
                _TransactionCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionCategoryId");
                OnTransactionCategoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TransactionCategoryId;
        partial void OnTransactionCategoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnTransactionCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SellerName
        {
            get
            {
                return _SellerName;
            }
            set
            {
                if (_SellerName != value)
                {
                    OnSellerNameChanging(value);
                    ReportPropertyChanging("SellerName");
                    _SellerName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SellerName");
                    OnSellerNameChanged();
                }
            }
        }
        private global::System.String _SellerName;
        partial void OnSellerNameChanging(global::System.String value);
        partial void OnSellerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SellerCode
        {
            get
            {
                return _SellerCode;
            }
            set
            {
                OnSellerCodeChanging(value);
                ReportPropertyChanging("SellerCode");
                _SellerCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SellerCode");
                OnSellerCodeChanged();
            }
        }
        private global::System.String _SellerCode;
        partial void OnSellerCodeChanging(global::System.String value);
        partial void OnSellerCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ShareSymbol
        {
            get
            {
                return _ShareSymbol;
            }
            set
            {
                if (_ShareSymbol != value)
                {
                    OnShareSymbolChanging(value);
                    ReportPropertyChanging("ShareSymbol");
                    _ShareSymbol = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ShareSymbol");
                    OnShareSymbolChanged();
                }
            }
        }
        private global::System.String _ShareSymbol;
        partial void OnShareSymbolChanging(global::System.String value);
        partial void OnShareSymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShareHolderManagerModel", Name="V_DEBIT_TRANSACTIONS")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class V_DEBIT_TRANSACTIONS : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new V_DEBIT_TRANSACTIONS object.
        /// </summary>
        /// <param name="transactionDetailId">Initial value of the TransactionDetailId property.</param>
        /// <param name="transactionId">Initial value of the TransactionId property.</param>
        /// <param name="sellerShareSymbol">Initial value of the SellerShareSymbol property.</param>
        /// <param name="sellerName">Initial value of the SellerName property.</param>
        public static V_DEBIT_TRANSACTIONS CreateV_DEBIT_TRANSACTIONS(global::System.Int64 transactionDetailId, global::System.Int64 transactionId, global::System.String sellerShareSymbol, global::System.String sellerName)
        {
            V_DEBIT_TRANSACTIONS v_DEBIT_TRANSACTIONS = new V_DEBIT_TRANSACTIONS();
            v_DEBIT_TRANSACTIONS.TransactionDetailId = transactionDetailId;
            v_DEBIT_TRANSACTIONS.TransactionId = transactionId;
            v_DEBIT_TRANSACTIONS.SellerShareSymbol = sellerShareSymbol;
            v_DEBIT_TRANSACTIONS.SellerName = sellerName;
            return v_DEBIT_TRANSACTIONS;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TransactionDetailId
        {
            get
            {
                return _TransactionDetailId;
            }
            set
            {
                if (_TransactionDetailId != value)
                {
                    OnTransactionDetailIdChanging(value);
                    ReportPropertyChanging("TransactionDetailId");
                    _TransactionDetailId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransactionDetailId");
                    OnTransactionDetailIdChanged();
                }
            }
        }
        private global::System.Int64 _TransactionDetailId;
        partial void OnTransactionDetailIdChanging(global::System.Int64 value);
        partial void OnTransactionDetailIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TransactionId
        {
            get
            {
                return _TransactionId;
            }
            set
            {
                if (_TransactionId != value)
                {
                    OnTransactionIdChanging(value);
                    ReportPropertyChanging("TransactionId");
                    _TransactionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransactionId");
                    OnTransactionIdChanged();
                }
            }
        }
        private global::System.Int64 _TransactionId;
        partial void OnTransactionIdChanging(global::System.Int64 value);
        partial void OnTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SellerShareSymbol
        {
            get
            {
                return _SellerShareSymbol;
            }
            set
            {
                if (_SellerShareSymbol != value)
                {
                    OnSellerShareSymbolChanging(value);
                    ReportPropertyChanging("SellerShareSymbol");
                    _SellerShareSymbol = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SellerShareSymbol");
                    OnSellerShareSymbolChanged();
                }
            }
        }
        private global::System.String _SellerShareSymbol;
        partial void OnSellerShareSymbolChanging(global::System.String value);
        partial void OnSellerShareSymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SellerId
        {
            get
            {
                return _SellerId;
            }
            set
            {
                OnSellerIdChanging(value);
                ReportPropertyChanging("SellerId");
                _SellerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SellerId");
                OnSellerIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SellerId;
        partial void OnSellerIdChanging(Nullable<global::System.Int32> value);
        partial void OnSellerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SellerShareTypeId
        {
            get
            {
                return _SellerShareTypeId;
            }
            set
            {
                OnSellerShareTypeIdChanging(value);
                ReportPropertyChanging("SellerShareTypeId");
                _SellerShareTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SellerShareTypeId");
                OnSellerShareTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SellerShareTypeId;
        partial void OnSellerShareTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnSellerShareTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SellerTransactionType
        {
            get
            {
                return _SellerTransactionType;
            }
            set
            {
                OnSellerTransactionTypeChanging(value);
                ReportPropertyChanging("SellerTransactionType");
                _SellerTransactionType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SellerTransactionType");
                OnSellerTransactionTypeChanged();
            }
        }
        private global::System.String _SellerTransactionType;
        partial void OnSellerTransactionTypeChanging(global::System.String value);
        partial void OnSellerTransactionTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> SellerQuanity
        {
            get
            {
                return _SellerQuanity;
            }
            set
            {
                OnSellerQuanityChanging(value);
                ReportPropertyChanging("SellerQuanity");
                _SellerQuanity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SellerQuanity");
                OnSellerQuanityChanged();
            }
        }
        private Nullable<global::System.Int64> _SellerQuanity;
        partial void OnSellerQuanityChanging(Nullable<global::System.Int64> value);
        partial void OnSellerQuanityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SellerName
        {
            get
            {
                return _SellerName;
            }
            set
            {
                if (_SellerName != value)
                {
                    OnSellerNameChanging(value);
                    ReportPropertyChanging("SellerName");
                    _SellerName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SellerName");
                    OnSellerNameChanged();
                }
            }
        }
        private global::System.String _SellerName;
        partial void OnSellerNameChanging(global::System.String value);
        partial void OnSellerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SellerCode
        {
            get
            {
                return _SellerCode;
            }
            set
            {
                OnSellerCodeChanging(value);
                ReportPropertyChanging("SellerCode");
                _SellerCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SellerCode");
                OnSellerCodeChanged();
            }
        }
        private global::System.String _SellerCode;
        partial void OnSellerCodeChanging(global::System.String value);
        partial void OnSellerCodeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShareHolderManagerModel", Name="V_OPENBALANCE_TRANSACTIONLIST")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class V_OPENBALANCE_TRANSACTIONLIST : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new V_OPENBALANCE_TRANSACTIONLIST object.
        /// </summary>
        /// <param name="transactionId">Initial value of the TransactionId property.</param>
        /// <param name="transactionNumber">Initial value of the TransactionNumber property.</param>
        /// <param name="buyerName">Initial value of the BuyerName property.</param>
        /// <param name="buyerShareSymbol">Initial value of the BuyerShareSymbol property.</param>
        public static V_OPENBALANCE_TRANSACTIONLIST CreateV_OPENBALANCE_TRANSACTIONLIST(global::System.Int64 transactionId, global::System.String transactionNumber, global::System.String buyerName, global::System.String buyerShareSymbol)
        {
            V_OPENBALANCE_TRANSACTIONLIST v_OPENBALANCE_TRANSACTIONLIST = new V_OPENBALANCE_TRANSACTIONLIST();
            v_OPENBALANCE_TRANSACTIONLIST.TransactionId = transactionId;
            v_OPENBALANCE_TRANSACTIONLIST.TransactionNumber = transactionNumber;
            v_OPENBALANCE_TRANSACTIONLIST.BuyerName = buyerName;
            v_OPENBALANCE_TRANSACTIONLIST.BuyerShareSymbol = buyerShareSymbol;
            return v_OPENBALANCE_TRANSACTIONLIST;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TransactionId
        {
            get
            {
                return _TransactionId;
            }
            set
            {
                if (_TransactionId != value)
                {
                    OnTransactionIdChanging(value);
                    ReportPropertyChanging("TransactionId");
                    _TransactionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransactionId");
                    OnTransactionIdChanged();
                }
            }
        }
        private global::System.Int64 _TransactionId;
        partial void OnTransactionIdChanging(global::System.Int64 value);
        partial void OnTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TransactionNumber
        {
            get
            {
                return _TransactionNumber;
            }
            set
            {
                if (_TransactionNumber != value)
                {
                    OnTransactionNumberChanging(value);
                    ReportPropertyChanging("TransactionNumber");
                    _TransactionNumber = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TransactionNumber");
                    OnTransactionNumberChanged();
                }
            }
        }
        private global::System.String _TransactionNumber;
        partial void OnTransactionNumberChanging(global::System.String value);
        partial void OnTransactionNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TransactionDate
        {
            get
            {
                return _TransactionDate;
            }
            set
            {
                OnTransactionDateChanging(value);
                ReportPropertyChanging("TransactionDate");
                _TransactionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionDate");
                OnTransactionDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _TransactionDate;
        partial void OnTransactionDateChanging(Nullable<global::System.DateTime> value);
        partial void OnTransactionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TransactionCategoryId
        {
            get
            {
                return _TransactionCategoryId;
            }
            set
            {
                OnTransactionCategoryIdChanging(value);
                ReportPropertyChanging("TransactionCategoryId");
                _TransactionCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionCategoryId");
                OnTransactionCategoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TransactionCategoryId;
        partial void OnTransactionCategoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnTransactionCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BuyerName
        {
            get
            {
                return _BuyerName;
            }
            set
            {
                if (_BuyerName != value)
                {
                    OnBuyerNameChanging(value);
                    ReportPropertyChanging("BuyerName");
                    _BuyerName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("BuyerName");
                    OnBuyerNameChanged();
                }
            }
        }
        private global::System.String _BuyerName;
        partial void OnBuyerNameChanging(global::System.String value);
        partial void OnBuyerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BuyerCode
        {
            get
            {
                return _BuyerCode;
            }
            set
            {
                OnBuyerCodeChanging(value);
                ReportPropertyChanging("BuyerCode");
                _BuyerCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BuyerCode");
                OnBuyerCodeChanged();
            }
        }
        private global::System.String _BuyerCode;
        partial void OnBuyerCodeChanging(global::System.String value);
        partial void OnBuyerCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BuyerShareSymbol
        {
            get
            {
                return _BuyerShareSymbol;
            }
            set
            {
                if (_BuyerShareSymbol != value)
                {
                    OnBuyerShareSymbolChanging(value);
                    ReportPropertyChanging("BuyerShareSymbol");
                    _BuyerShareSymbol = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("BuyerShareSymbol");
                    OnBuyerShareSymbolChanged();
                }
            }
        }
        private global::System.String _BuyerShareSymbol;
        partial void OnBuyerShareSymbolChanging(global::System.String value);
        partial void OnBuyerShareSymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Int64> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Int64> value);
        partial void OnQuantityChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShareHolderManagerModel", Name="V_SELLER_BUYER_OPENINGBALANCE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class V_SELLER_BUYER_OPENINGBALANCE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new V_SELLER_BUYER_OPENINGBALANCE object.
        /// </summary>
        /// <param name="transactionId">Initial value of the TransactionId property.</param>
        /// <param name="transactionNumber">Initial value of the TransactionNumber property.</param>
        /// <param name="buyerShareSymbol">Initial value of the BuyerShareSymbol property.</param>
        /// <param name="buyerName">Initial value of the BuyerName property.</param>
        /// <param name="sellerName">Initial value of the SellerName property.</param>
        public static V_SELLER_BUYER_OPENINGBALANCE CreateV_SELLER_BUYER_OPENINGBALANCE(global::System.Int64 transactionId, global::System.String transactionNumber, global::System.String buyerShareSymbol, global::System.String buyerName, global::System.String sellerName)
        {
            V_SELLER_BUYER_OPENINGBALANCE v_SELLER_BUYER_OPENINGBALANCE = new V_SELLER_BUYER_OPENINGBALANCE();
            v_SELLER_BUYER_OPENINGBALANCE.TransactionId = transactionId;
            v_SELLER_BUYER_OPENINGBALANCE.TransactionNumber = transactionNumber;
            v_SELLER_BUYER_OPENINGBALANCE.BuyerShareSymbol = buyerShareSymbol;
            v_SELLER_BUYER_OPENINGBALANCE.BuyerName = buyerName;
            v_SELLER_BUYER_OPENINGBALANCE.SellerName = sellerName;
            return v_SELLER_BUYER_OPENINGBALANCE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TransactionId
        {
            get
            {
                return _TransactionId;
            }
            set
            {
                if (_TransactionId != value)
                {
                    OnTransactionIdChanging(value);
                    ReportPropertyChanging("TransactionId");
                    _TransactionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransactionId");
                    OnTransactionIdChanged();
                }
            }
        }
        private global::System.Int64 _TransactionId;
        partial void OnTransactionIdChanging(global::System.Int64 value);
        partial void OnTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TransactionNumber
        {
            get
            {
                return _TransactionNumber;
            }
            set
            {
                if (_TransactionNumber != value)
                {
                    OnTransactionNumberChanging(value);
                    ReportPropertyChanging("TransactionNumber");
                    _TransactionNumber = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TransactionNumber");
                    OnTransactionNumberChanged();
                }
            }
        }
        private global::System.String _TransactionNumber;
        partial void OnTransactionNumberChanging(global::System.String value);
        partial void OnTransactionNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TransactionDate
        {
            get
            {
                return _TransactionDate;
            }
            set
            {
                OnTransactionDateChanging(value);
                ReportPropertyChanging("TransactionDate");
                _TransactionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionDate");
                OnTransactionDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _TransactionDate;
        partial void OnTransactionDateChanging(Nullable<global::System.DateTime> value);
        partial void OnTransactionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TransactionCategoryId
        {
            get
            {
                return _TransactionCategoryId;
            }
            set
            {
                OnTransactionCategoryIdChanging(value);
                ReportPropertyChanging("TransactionCategoryId");
                _TransactionCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionCategoryId");
                OnTransactionCategoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TransactionCategoryId;
        partial void OnTransactionCategoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnTransactionCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BuyerShareSymbol
        {
            get
            {
                return _BuyerShareSymbol;
            }
            set
            {
                if (_BuyerShareSymbol != value)
                {
                    OnBuyerShareSymbolChanging(value);
                    ReportPropertyChanging("BuyerShareSymbol");
                    _BuyerShareSymbol = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("BuyerShareSymbol");
                    OnBuyerShareSymbolChanged();
                }
            }
        }
        private global::System.String _BuyerShareSymbol;
        partial void OnBuyerShareSymbolChanging(global::System.String value);
        partial void OnBuyerShareSymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BuyerName
        {
            get
            {
                return _BuyerName;
            }
            set
            {
                if (_BuyerName != value)
                {
                    OnBuyerNameChanging(value);
                    ReportPropertyChanging("BuyerName");
                    _BuyerName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("BuyerName");
                    OnBuyerNameChanged();
                }
            }
        }
        private global::System.String _BuyerName;
        partial void OnBuyerNameChanging(global::System.String value);
        partial void OnBuyerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BuyerCode
        {
            get
            {
                return _BuyerCode;
            }
            set
            {
                OnBuyerCodeChanging(value);
                ReportPropertyChanging("BuyerCode");
                _BuyerCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BuyerCode");
                OnBuyerCodeChanged();
            }
        }
        private global::System.String _BuyerCode;
        partial void OnBuyerCodeChanging(global::System.String value);
        partial void OnBuyerCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SellerName
        {
            get
            {
                return _SellerName;
            }
            set
            {
                if (_SellerName != value)
                {
                    OnSellerNameChanging(value);
                    ReportPropertyChanging("SellerName");
                    _SellerName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SellerName");
                    OnSellerNameChanged();
                }
            }
        }
        private global::System.String _SellerName;
        partial void OnSellerNameChanging(global::System.String value);
        partial void OnSellerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SellerCode
        {
            get
            {
                return _SellerCode;
            }
            set
            {
                OnSellerCodeChanging(value);
                ReportPropertyChanging("SellerCode");
                _SellerCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SellerCode");
                OnSellerCodeChanged();
            }
        }
        private global::System.String _SellerCode;
        partial void OnSellerCodeChanging(global::System.String value);
        partial void OnSellerCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Int64> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Int64> value);
        partial void OnQuantityChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShareHolderManagerModel", Name="V_SUM_TRANSACTION")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class V_SUM_TRANSACTION : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new V_SUM_TRANSACTION object.
        /// </summary>
        /// <param name="shareHolderId">Initial value of the ShareHolderId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="shareSymbol">Initial value of the ShareSymbol property.</param>
        /// <param name="sSN">Initial value of the SSN property.</param>
        public static V_SUM_TRANSACTION CreateV_SUM_TRANSACTION(global::System.Int32 shareHolderId, global::System.String name, global::System.String shareSymbol, global::System.String sSN)
        {
            V_SUM_TRANSACTION v_SUM_TRANSACTION = new V_SUM_TRANSACTION();
            v_SUM_TRANSACTION.ShareHolderId = shareHolderId;
            v_SUM_TRANSACTION.Name = name;
            v_SUM_TRANSACTION.ShareSymbol = shareSymbol;
            v_SUM_TRANSACTION.SSN = sSN;
            return v_SUM_TRANSACTION;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ShareHolderId
        {
            get
            {
                return _ShareHolderId;
            }
            set
            {
                if (_ShareHolderId != value)
                {
                    OnShareHolderIdChanging(value);
                    ReportPropertyChanging("ShareHolderId");
                    _ShareHolderId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ShareHolderId");
                    OnShareHolderIdChanged();
                }
            }
        }
        private global::System.Int32 _ShareHolderId;
        partial void OnShareHolderIdChanging(global::System.Int32 value);
        partial void OnShareHolderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ShareSymbol
        {
            get
            {
                return _ShareSymbol;
            }
            set
            {
                if (_ShareSymbol != value)
                {
                    OnShareSymbolChanging(value);
                    ReportPropertyChanging("ShareSymbol");
                    _ShareSymbol = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ShareSymbol");
                    OnShareSymbolChanged();
                }
            }
        }
        private global::System.String _ShareSymbol;
        partial void OnShareSymbolChanging(global::System.String value);
        partial void OnShareSymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SSN
        {
            get
            {
                return _SSN;
            }
            set
            {
                if (_SSN != value)
                {
                    OnSSNChanging(value);
                    ReportPropertyChanging("SSN");
                    _SSN = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SSN");
                    OnSSNChanged();
                }
            }
        }
        private global::System.String _SSN;
        partial void OnSSNChanging(global::System.String value);
        partial void OnSSNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShareHolderCode
        {
            get
            {
                return _ShareHolderCode;
            }
            set
            {
                OnShareHolderCodeChanging(value);
                ReportPropertyChanging("ShareHolderCode");
                _ShareHolderCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShareHolderCode");
                OnShareHolderCodeChanged();
            }
        }
        private global::System.String _ShareHolderCode;
        partial void OnShareHolderCodeChanging(global::System.String value);
        partial void OnShareHolderCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> OpenningBalance
        {
            get
            {
                return _OpenningBalance;
            }
            set
            {
                OnOpenningBalanceChanging(value);
                ReportPropertyChanging("OpenningBalance");
                _OpenningBalance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OpenningBalance");
                OnOpenningBalanceChanged();
            }
        }
        private Nullable<global::System.Int64> _OpenningBalance;
        partial void OnOpenningBalanceChanging(Nullable<global::System.Int64> value);
        partial void OnOpenningBalanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Credit
        {
            get
            {
                return _Credit;
            }
            set
            {
                OnCreditChanging(value);
                ReportPropertyChanging("Credit");
                _Credit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Credit");
                OnCreditChanged();
            }
        }
        private Nullable<global::System.Int64> _Credit;
        partial void OnCreditChanging(Nullable<global::System.Int64> value);
        partial void OnCreditChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Debit
        {
            get
            {
                return _Debit;
            }
            set
            {
                OnDebitChanging(value);
                ReportPropertyChanging("Debit");
                _Debit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Debit");
                OnDebitChanged();
            }
        }
        private Nullable<global::System.Int64> _Debit;
        partial void OnDebitChanging(Nullable<global::System.Int64> value);
        partial void OnDebitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Balance
        {
            get
            {
                return _Balance;
            }
            set
            {
                OnBalanceChanging(value);
                ReportPropertyChanging("Balance");
                _Balance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Balance");
                OnBalanceChanged();
            }
        }
        private Nullable<global::System.Int64> _Balance;
        partial void OnBalanceChanging(Nullable<global::System.Int64> value);
        partial void OnBalanceChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShareHolderManagerModel", Name="V_TRANSACTIONDETAILOFSHAREHOLDERSEARCH")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class V_TRANSACTIONDETAILOFSHAREHOLDERSEARCH : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new V_TRANSACTIONDETAILOFSHAREHOLDERSEARCH object.
        /// </summary>
        /// <param name="shareSymbol">Initial value of the ShareSymbol property.</param>
        public static V_TRANSACTIONDETAILOFSHAREHOLDERSEARCH CreateV_TRANSACTIONDETAILOFSHAREHOLDERSEARCH(global::System.String shareSymbol)
        {
            V_TRANSACTIONDETAILOFSHAREHOLDERSEARCH v_TRANSACTIONDETAILOFSHAREHOLDERSEARCH = new V_TRANSACTIONDETAILOFSHAREHOLDERSEARCH();
            v_TRANSACTIONDETAILOFSHAREHOLDERSEARCH.ShareSymbol = shareSymbol;
            return v_TRANSACTIONDETAILOFSHAREHOLDERSEARCH;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ShareHolderID
        {
            get
            {
                return _ShareHolderID;
            }
            set
            {
                OnShareHolderIDChanging(value);
                ReportPropertyChanging("ShareHolderID");
                _ShareHolderID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShareHolderID");
                OnShareHolderIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ShareHolderID;
        partial void OnShareHolderIDChanging(Nullable<global::System.Int32> value);
        partial void OnShareHolderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ShareSymbol
        {
            get
            {
                return _ShareSymbol;
            }
            set
            {
                if (_ShareSymbol != value)
                {
                    OnShareSymbolChanging(value);
                    ReportPropertyChanging("ShareSymbol");
                    _ShareSymbol = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ShareSymbol");
                    OnShareSymbolChanged();
                }
            }
        }
        private global::System.String _ShareSymbol;
        partial void OnShareSymbolChanging(global::System.String value);
        partial void OnShareSymbolChanged();

        #endregion
    
    }

    #endregion
    
}
