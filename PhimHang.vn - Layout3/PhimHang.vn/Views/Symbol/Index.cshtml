
@{
    ViewBag.Title = "Phím hàng: " + @ViewBag.StockCode;
    Layout = "~/Views/Shared/_Layout_Symbol.cshtml";
}
@section scripts{
    <link href="~/Content/StockPrice.css" rel="stylesheet" />
    <script src="~/Scripts/jquery.timeago.js"></script>
}

    <div class="bg-white" style="padding-bottom: 3px;">
        <div class="status-box">
            <div class="avatar-small">
                <img src="@Url.Content("~/" + @ViewBag.AvataEmage)?width=28&height=28&mode=crop" class="img-rounded" alt="avatar">
            </div>
            <div class="input-status">
                <form id="frmStatus" name="frmStatus">
                    <div id="input-status-text" class="input-status-text">
                        <textarea data-bind="value : newMessage, valueUpdate : 'afterkeydown' , limitCharacters : 140" name="status" rows="4" placeholder="$Mã cổ phiếu ($VNM, $GAS); Username" id="status" title="Search"></textarea>
                    </div>
                    <div class="status-control">
                        <div class="choose_file f-left">
                            <i class="fa fa-camera"></i>
                            <input name="Select File" type="file" />
                        </div>

                        <div id="radio" class="switch3button f-left">
                            <input type="radio" id="radio1" name="BullBear" value="Bull">
                            <label for="radio1" class="divBull">Tăng</label>
                            <input type="radio" id="radio3" name="BullBear" value="Bear">
                            <label for="radio3" class="divBear">Giảm</label>
                        </div>
                        <div id="btnPhim" class="f-right">
                            <span data-bind="text : count"></span>
                            <a href="javascript:void(0)" class="button-phim" data-bind="click : addPost, visible: enablePhimHang "><span>PHÍM</span></a>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        <div class="filer-bar">
            <div class="toSpan filer-bar-label">Bộ Lọc: </div>
            <div class="toSpan filer-bar-item"> <a href="#">Tất cả</a> </div>
            <div class="toSpan filer-bar-item"> <a href="#">Theo biểu đồ</a> </div>
            <div class="toSpan filer-bar-item"> <a href="#">Theo nhận định</a></div>
            <div class="toSpan filer-bar-item">
                <a id="btn-option-more" href="#" data-dropdown="#dropdown-2">
                    Tùy chọn khác
                    <i class="fa fa-caret-down"></i>
                </a>
                <div id="dropdown-2" class="dropdown dropdown-tip dropdown-anchor-right dropdown-relative">
                    <ul class="dropdown-menu">
                        <li><a href="#4">Item 4</a></li>
                        <li><a href="#5">Item 5</a></li>
                        <li><a href="#5">Item 6</a></li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="filer-new-status">
            <div class="filer-new-status-button-bar">
                <div class="onoffswitch f-right">
                    <input type="checkbox" name="onoffswitch" class="onoffswitch-checkbox" id="myonoffswitch">
                    <label id="abcww" class="onoffswitch-label" for="myonoffswitch">
                        <span class="onoffswitch-inner"></span>
                        <span class="onoffswitch-switch"></span>
                    </label>
                </div>
                <div class="text-label">Hiển thị bài phím mới</div>
            </div>
            <div id="msg-new-status" class="msg-new-status">
                Có <strong data-bind="text: newPosts().length"></strong> bài phím mới <a href="#" data-bind="click : loadNewPosts, visible: newPosts().length > 0">Hiển Thị <strong data-bind="text : newPosts().length"></strong> bài phím này</a>
            </div>
        </div>
    </div>
<div class="list-status" data-bind="foreach : posts">
    <hr style="border-color: transparent; display: none; margin-top: 1px; " data-bind=" attr : { class : listCommentIdHr } " />
    <div class="bg-white" >
        <div class="list-item-status" tabindex="-1">
            <div class=" avata-genaral-size">
                <img src="/img/avatar5.jpg" class="img-rounded" alt="avatar">
            </div>
            <div class="list-item-detail">
                <div data-bind="click : loadNewComments">
                    <div class="list-item-date">Dec 1 at 9:30 PM</div>
                    <div class="list-item-username" data-bind="text : PostedByName">Tom Truong</div>
                    <div class="list-item-status-content" data-bind="html : Message"></div>
                </div>
                <div class="list-item-control">
                    <a class="button btn-answer" href="#" title="Trả lời (12)"><i class="fa fa-mail-reply"></i>Trả lời (12)</a>
                    <a class="button" href="#" title="Chia sẻ (22)"><i class="fa fa-refresh"></i>Chia sẻ (22)</a>
                    <a class="button" href="#" title="Thích"><i class="fa fa-star"></i>Thích</a>
                    <a class="button" href="#" title="Báo cáo vi phạm"><i class="fa  fa-warning"></i>Báo cáo vi phạm</a>
                </div>
            </div>
        </div>
        <div class="list-comment" data-bind=" attr: { id: listCommentId }, visible: replys().length > 0">

            <div class="comment-item">
                <div class="avata-genaral-size">
                    <img src="@Url.Content("~/" + @ViewBag.AvataEmage)?width=28&height=28&mode=crop" class="img-rounded" alt="avatar">
                </div>
                <div class="list-item-detail">
                    <form name="frmComment">
                        <div class="input-comment-text">
                            <textarea name="comment" rows="5" placeholder="$Mã cổ phiếu ($VNM, $GAS); " title="Search" autocomplete="off" rows="5"></textarea>
                        </div>
                        <div class="comment-control">
                            <div id="btnPhim" class="f-right">
                                <span>140</span>
                                <a href="#" class="button-phim"><span>PHÍM</span></a>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
            <div data-bind="foreach : replys">
                <div class="comment-item">
                    <div class="avata-genaral-size">
                        <img src="/img/avatar2.jpg" class="img-rounded" alt="avatar">
                    </div>
                    <div class="list-item-detail">
                        <div class="list-item-date">Dec 1 at 9:30 PM</div>
                        <div class="list-item-username" data-bind="text : ReplyByName"></div>
                        <div class="list-item-status-content" data-bind="html : ReplyMessage">goodmorning</div>
                        <div class="list-item-control">
                            <a class="button" href="#" title="Báo cáo vi phạm"><i class="fa  fa-warning"></i>Báo cáo vi phạm</a>
                        </div>
                    </div>
                </div>
            </div>
            <div class="comment-loadmore">
                <a href="#">View more in conversation →</a>
            </div>
            
        </div>
    </div>
    <hr style="border-color: transparent; display: none; margin-top: 1px; " data-bind=" attr : { class : listCommentIdHr } " />
</div>

<!-- Comment-->

<script type="text/javascript">
    //$(":not(.area-center)").click(function () {
    //    alert('all here');
    //    //$("*").filter('.list-comment').hide();
    //    //$("*").filter('hr').hide();
    //    //self.replys([]);
    //});
    ////$('body').click(function () {
    ////    $('.area-center').hide();
    ////});

    //$('.area-center').click(function (event) {
    //    event.stopPropagation();
    //});
    function getTimeAgo(varDate) {
        if (varDate) {
            return $.timeago(varDate);
        }
        else {
            return '';
        }
    }
    function Reply(data) {
        var self = this;
        data = data || {};
        self.PostId = data.PostId;
        self.ReplyMessage = ko.observable(data.ReplyMessage || "");
        self.ReplyByName = data.ReplyByName || "";
        self.ReplyByAvatar = data.ReplyByAvatar || "";
        self.ReplyDate = getTimeAgo(data.ReplyDate);
        
    }
    function Post(data) {
        var self = this;
        data = data || {};
        self.PostId = data.PostId;
        self.Message = ko.observable(data.Message || "");
        //self.PostedBy = data.PostedBy || "";
        self.PostedByName = data.PostedByName || "";
        self.PostedByAvatar = data.PostedByAvatar || "";
        self.PostedDate = getTimeAgo(data.PostedDate);
        self.StockPrimary = data.StockPrimary;
        self.notification = ko.observable(0);
        self.replys = ko.observableArray();
        self.listCommentId = 'list-comment' + data.PostId || "";
        self.listCommentIdHr = 'Hrlist-comment' + data.PostId || "";

        self.loadNewComments = function () {
            $("#list-comment" + self.PostId).toggle(20,function () {
                if ($(this).is(":hidden")) {
                    self.replys([]);
                    $(".Hrlist-comment" + self.PostId).hide();
                    console.log('hide :' + self.replys().length);
                    // do this
                } else {
                    $(".Hrlist-comment" + self.PostId).show();
                    $.get('@Url.Action("GetCommentByPostId", "FollowStock")',
                   {
                       postid: self.PostId,
                   }, function (data) {
                       var mappedReply = $.map(ko.utils.parseJson(data), function (item) { return new Reply(item); });
                       $(mappedReply).each(function (index, element) {
                           self.replys.push(element);
                       });
                   });
                    console.log('show :' + self.replys().length);
                }
                    // do that
                
            });           
            //$(":not(.area-center)").click(function () {
            //    alert('all here');
            //        //$("*").filter('.list-comment').hide();
            //        //$("*").filter('hr').hide();
            //        //self.replys([]);
            //});
          
            //$(".content-main").click(function () {
            //    alert('all here');
            //    //$("*").filter('.list-comment').hide();
            //    //$("*").filter('hr').hide();
            //    //self.replys([]);
            //});
            
        }
    }
    var commenthub = $.connection.CommentHub;
    function viewModel() {
        var self = this;
        self.posts = ko.observableArray();
        self.newMessage = ko.observable('$@ViewBag.StockCode ');
        self.error = ko.observable();
        self.newPosts = ko.observableArray(); // khi luu vao day khi co post moi voi nut thong bao post manual


        // SignalR related

        // Reference the proxy for the hub.
        //self.hub = $.connection.CommentHub;

        //without the genaraled proxy


        var checkpost = '';
        self.init = function () {
            self.error(null);
            commenthub.server.joinRoom('@ViewBag.StockCode');
            @*self.hub.server.getPosts('@ViewBag.StockCode').fail(function (err) {
                self.error(err);
            });*@

            $.get('@Url.Action("GetPostsByStock", "FollowStock")',
            {
                stockCurrent: '@ViewBag.StockCode',
            }, function (data) {

                var mappedPosts = $.map(ko.utils.parseJson(data), function (item) { return new Post(item); });
                $(mappedPosts).each(function (index, element) {
                    self.posts.push(element);
                });
            })

        }
        self.enablePhimHang = ko.computed(function () {
            return self.newMessage().length <= 140 && self.newMessage().length >= 6;
        });

        //self.hub.client.loadPosts = function (data) {
        //    var mappedPosts = $.map(data, function (item) { return new Post(item, self.hub); });
        //    self.posts(mappedPosts);
        //}

        self.addPost = function () {
            self.error(null);
            var nhanDinh = $("input:radio[name='BullBear']:checked").val();
            commenthub.server.addPost({ "Message": self.newMessage() }, '@ViewBag.StockCode', '@ViewBag.CureentUserId', '@ViewBag.UserName', '@ViewBag.AvataImageUrl', nhanDinh).fail(function (err) {
                self.error(err);
            });
            checkpost = 'Y';
            self.newMessage('$@ViewBag.StockCode ');//
        }

        commenthub.client.addPost = function (post) {
            if ($('#myonoffswitch').is(':checked')) { // ON
                if (checkpost == 'Y') {
                    self.posts.splice(0, 0, new Post(post));
                }
                else {
                    self.newPosts.splice(0, 0, new Post(post));
                }
            }
            else { // OFF
                self.posts.splice(0, 0, new Post(post));
            }
            checkpost = 'N';
        }


        self.loadNewPosts = function () {
            self.posts(self.newPosts().concat(self.posts()));
            self.newPosts([]);
        }



        self.count = ko.computed(function () {
            var countNum = 140 - self.newMessage().length;
            return countNum;
        });

        // notification of reply
        commenthub.client.newReplyNoti = function (num, postid) {
            var replysfind = ko.utils.arrayFirst(self.posts(), function (item) {
                return item.PostId === postid;
            });
            if (replysfind != null) {
                replysfind.notification(replysfind.notification() + num);
            }
            //alert(self.notification());
        }
        // end

        self.loadMores = function () {
            $.get('@Url.Action("GetCommentBySymbol", "FollowStock")',
            {
                stockCurrent: '@ViewBag.StockCode',
                skipposition: self.posts().length
            }, function (data) {

                var mappedPosts = $.map(ko.utils.parseJson(data), function (item) { return new Post(item); });
                $(mappedPosts).each(function (index, element) {
                    self.posts.push(element);
                });
            })
        };
    }

    ko.bindingHandlers.limitCharacters = {
        update: function (element, valueAccessor, allBindingsAccessor, viewModel) {
            element.value = element.value.substr(0, valueAccessor());
            allBindingsAccessor().value(element.value.substr(0, valueAccessor()));
        }
    };
    //var chromeframe = Request.UserAgent != null && Request.UserAgent.Contains("chromeframe");
    //var transports = chromeframe ? "{ transport: 'longPolling' }" : "";
    var vmPost = new viewModel();
    var tryingToReconnect = false;
    ko.applyBindings(vmPost, document.getElementById("CommentForKoLoad"));
    $.connection.hub.start({ transport: ['webSockets', 'serverSentEvents', 'longPolling'] })
                            .done(function () {
                                vmPost.init();
                                tryingToReconnect = true;
                            }).fail(function (fail) {
                                console.log('Không thể mở kết nối đến server' + fail);
                            });

    $.connection.hub.error(function (error) {
        commenthub.client.stopClient = function () {
            $.connection.hub.stop();
            console.log('$.connection.hub.error' + error);
        };


    });
    $.connection.hub.disconnected(function () {
        setTimeout(function () {
            if (tryingToReconnect) {
                $.connection.hub.start().done(function () {
                    commenthub.server.joinRoom('@ViewBag.StockCode');
                });
            }
            else {
                $.connection.hub.start().done(function () {
                    vmPost.init();
                });
            }

        }, 10000); // Restart connection after 10 seconds.
    });
    $.connection.hub.connectionSlow(function () {
        console.log('Kết nối đến server chậm do đường truyền')
    });
    window.onbeforeunload = function (e) {
        //$.connection.hub.stop
        //commenthub.server.stop = function () {
        //    $.connection.hub.stop();

        //    console.log('window.onbeforeunload');
        //};

    };

    $.connection.hub.transportConnectTimeout = 4000;
    // Handle connection loss and reconnect in a robust way
    @*
    var timeout = null;
    var interval = 10000;
    $.connection.hub.stateChanged(function (change) {
        if (change.newState === $.signalR.connectionState.reconnecting) {
            timeout = setTimeout(function () {
                console.log('Server is unreachable, trying to reconnect...');
            }, interval);
        }
        else if (timeout && change.newState === $.signalR.connectionState.connected) {
            console.log('Server reconnected, reinitialize');
            if (tryingToReconnect) { // lay nhung tin da mat khi dc ket noi lai
                $.connection.hub.start();
            }
            else {
                $.connection.hub.start().done(function () {
                    vmPost.init();
                });
            }
            clearTimeout(timeout);
            timeout = null;
        }
        else if (change.newState === $.connection.connectionState.disconnected) {
            console.log('Server disconnected, disconnected');
            $.connection.hub.start();
        }
    });
    *@
    $.connection.hub.logging = true;

</script>


