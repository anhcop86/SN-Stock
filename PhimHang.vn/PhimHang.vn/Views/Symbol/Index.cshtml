
@{
    ViewBag.Title = "Phím hàng: " + @ViewBag.StockCode;
    Layout = "~/Views/Shared/_Layout_MyProfile.cshtml";
}
@section scripts{
    @*<script src="~/Scripts/knockout.mapping-latest.js"></script>*@
    @*<script src="~/Scripts/jquery.signalR-2.1.2.min.js"></script>
    <script src="~/signalr/hubs"></script>*@
<link href="~/Content/StockPrice.css" rel="stylesheet" />
<script src="~/Scripts/jquery.timeago.js"></script>
@*<script src="~/Scripts/StockPrice.js"></script>*@
}


<div class="stock-detail">
    @Html.Partial("_Partial_stock-detail")
</div>
<div class="bg-white" id="CommentForKoLoad">
    <div class="status-box">
        <div class="avatar-small">
            <img src="@Url.Content("~/" + @ViewBag.AvataEmage)?width=28&height=28&mode=crop" class="img-rounded" alt="avatar">
        </div>
        <div class="input-status">
            
                <div id="input-status-text" class="input-status-text">
                    <textarea data-bind="value : newMessage, valueUpdate : 'afterkeydown' , limitCharacters : 140" name="status" rows="5" placeholder="$Mã cổ phiếu ($VNM, $GAS); Username" id="status" title="Search" ></textarea>
                </div>
                <div class="status-control">
                    <div class="choose_file f-left">
                        <i class="fa fa-camera"></i>
                        <input name="Select File" type="file" />
                    </div>

                    <div id="radioGroup" class="switch3button f-left">
                        <input type="radio" id="radio3" name="BullBear" value="-1"><label for="radio3">Giảm</label>
                        <input type="radio" id="radio2" name="BullBear" value="0" checked="checked"><label for="radio2">Đứng</label>
                        <input type="radio" id="radio1" name="BullBear" value="1"><label for="radio1">Tăng</label>
                    </div>
                    <div id="btnPhim" class="f-right">
                        <span data-bind="text : count"></span>
                        @*<a href="javascript:void(0)" class="button-phim" data-bind="click : addPost"><span>PHÍM</span></a>*@
                        <input type="button" style="cursor:pointer" class="button-phim" value="PHÍM" data-bind="click : addPost,  enable: enablePhimHang " />
                    </div>
                </div>
            
        </div>
    </div>
    <div class="filer-bar">
        <div class="toSpan filer-bar-label">Bộ Lọc: </div>
        <div class="toSpan filer-bar-item"> <a href="#">Tất cả</a> </div>
        <div class="toSpan filer-bar-item"> <a href="#">Theo biểu đồ</a> </div>
        <div class="toSpan filer-bar-item"> <a href="#">Theo nhận định</a></div>
        <div class="toSpan filer-bar-item">
            <a id="btn-option-more" href="#">
                Tùy chọn khác
                <i class="fa fa-caret-down"></i>
            </a>
        </div>
        <br>
        <div class="dropdownlist filer-bar-dropdown">
            <div class="dropdown-item">
                <a href="#"><span class="todiv"><i class="fa fa-adn"></i> Profile</span></a>
            </div>
            <div class="dropdown-item">
                <a href="#"><span class="todiv"><i class="fa fa-cog"></i> Setting</span></a>
            </div>
            <div class="dropdown-item">
                <a href="#"><span class="todiv"><i class="fa fa-sign-out"></i> Logout</span></a>
            </div>
        </div>

    </div>
    <div class="filer-new-status">
        <div class="filer-new-status-button-bar">
            <div class="onoffswitch f-right">
                <input type="checkbox" name="onoffswitch" class="onoffswitch-checkbox" id="myonoffswitch">
                <label id="abcww" class="onoffswitch-label" for="myonoffswitch">
                    <span class="onoffswitch-inner"></span>
                    <span class="onoffswitch-switch"></span>
                </label>
            </div>
            <div class="text-label">Hiển thị bài phím mới</div>
        </div>
        <div id="msg-new-status" class="msg-new-status" style="display:none">
            Có <strong data-bind="text: newPosts().length"></strong> bài phím mới <a href="#" data-bind="click : loadNewPosts, visible: newPosts().length > 0">Hiển Thị <strong data-bind="text : newPosts().length"></strong> bài phím này</a>
        </div>
    </div>
    <div class="list-status" data-bind="foreach : posts">
        <!--list comment here location.href='/Symbol/Details/' +-->
        <div class="list-item-status">
            <div class="avata-genaral-size">
                <img style="cursor:pointer" class="img-rounded" alt="avatar" data-bind="attr: { src: PostedByAvatar },click : function() {  location.href='/user/' + PostedByName + '/tab/1' }">
            </div>
            <div class="list-item-detail">
                <div class="list-item-date" data-bind="text : PostedDate"></div>
                <div style="cursor:pointer" class="list-item-username" data-bind="text : PostedByName, click : function() {  location.href='/user/' + PostedByName + '/tab/1' }"></div>
                <div style="cursor:pointer" class="list-item-status-content" data-bind="html : Message, click : function() {  location.href='/PostDetail?postid='+ PostId +'&stock=' + StockPrimary } "></div>
                <div class="list-item-control">
                    <a class="button"><i class="fa fa-comments"></i><span style="color:red; font-weight:bold" data-bind="text :notification, visible: notification() > 0"></span></a>
                    <a style="cursor:pointer" class="button" data-bind="click : function() {  location.href='/PostDetail?postid='+ PostId +'&stock=' + StockPrimary }">Trả lời</a>
                    <a class="button">Chia sẻ</a>
                    <a class="button">Thích</a>
                    <a class="button">Báo cáo vi phạm</a>
                </div>
            </div>
        </div>

        <!--end list comment-->

    </div>
    <div style="text-align: center; margin-top: 10px; ">
        <a href="javascript:void(0)" class="button-loadmore" data-bind="click : loadMores"><span>LOAD MORE 10</span></a>
    </div>
</div>
<!-- gia co phieu real time-->
@*
    <script type="text/javascript">

        var viewStockModel = {

            CompanyID: ko.observable(),
            FinishPrice: ko.observable(),
            Diff: ko.observable(),
            DiffRate: ko.observable(),

        };

        //var listStock =
        viewStockModel.ColourChange = ko.pureComputed(function () {
            return this.Diff() === 0 ? 'YELLOW_Price'
                : this.Diff() > 0 ? 'GREEN_Price'
                : 'RED_Price';
        }, viewStockModel);

        viewStockModel.DiffRateChange = ko.pureComputed(function () {
            return '(' + ko.unwrap(this.DiffRate) + '%)';
        }, viewStockModel);
        // This makes Knockout get to work


        $(function () {
            var ticker = $.connection.StockRealTimeHub;

            function init() {

                ticker.server.getStock('@ViewBag.StockCode').done(function (stock) {

                    viewStockModel.CompanyID(stock.CompanyID).Diff(stock.Diff).DiffRate(stock.DiffRate).FinishPrice(stock.FinishPrice);
                    ko.applyBindings(viewStockModel, document.getElementById("stockPriceDivId")); // knockout javascript framework bindings

                });
                ticker.server.joinRoom('@ViewBag.StockCode');
            }

            ticker.client.updateStockPrice = function (stock) {
                viewStockModel.CompanyID(stock.CompanyID).Diff(stock.Diff).DiffRate(stock.DiffRate).FinishPrice(stock.FinishPrice);

            }

            $.connection.hub.start().done(init);
            $.connection.hub.logging = true;

        });


    </script>
*@
<!-- Comment-->

<script type="text/javascript">
    function getTimeAgo(varDate) {
        if (varDate) {
            return $.timeago(varDate);
        }
        else {
            return '';
        }
    }
    function Post(data, hub) {
        var self = this;
        data = data || {};
        self.PostId = data.PostId;
        self.Message = ko.observable(data.Message || "");
        //self.PostedBy = data.PostedBy || "";
        self.PostedByName = data.PostedByName || "";
        self.PostedByAvatar = data.PostedByAvatar || "";
        self.PostedDate = getTimeAgo(data.PostedDate);
        self.StockPrimary = data.StockPrimary;
        self.notification = ko.observable(0);
        

        //self.error = ko.observable();
        self.hub = hub;


    }
    function viewModel() {
        var self = this;
        self.posts = ko.observableArray();
        self.newMessage = ko.observable('$@ViewBag.StockCode ');
        self.error = ko.observable();
        self.newPosts = ko.observableArray();
        // SignalR related
        //self.newPosts = ko.observableArray();
        // Reference the proxy for the hub.
        self.hub = $.connection.CommentHub;
        var checkpost = '';
        self.init = function () {
            self.error(null);
            self.hub.server.joinRoom('@ViewBag.StockCode');
            self.hub.server.getPosts('@ViewBag.StockCode').fail(function (err) {
                self.error(err);
            });
        }
        self.enablePhimHang = ko.computed(function () {
            return self.newMessage().length <= 140 && self.newMessage().length >= 6;
        });

        self.hub.client.loadPosts = function (data) {            
            var mappedPosts = $.map(data, function (item) { return new Post(item, self.hub); });
            self.posts(mappedPosts);
        }

        self.addPost = function () {
            self.error(null);
            var nhanDinh = $("input:radio[name='BullBear']:checked").val();
            self.hub.server.addPost({ "Message": self.newMessage() }, '@ViewBag.StockCode', '@ViewBag.CureentUserId', '@ViewBag.UserName', '@ViewBag.AvataImageUrl', nhanDinh).fail(function (err) {
                self.error(err);
            });
            checkpost = 'Y';            
            self.newMessage('$@ViewBag.StockCode ');//
        }

        self.hub.client.addPost = function (post) {            
            if ($('#myonoffswitch').is(':checked')) { // ON                
                if (checkpost == 'Y') {
                    self.posts.splice(0, 0, new Post(post, self.hub));                    
                }
                else { 
                    self.newPosts.splice(0, 0, new Post(post, self.hub));
                }                
            }
            else { // OFF                
                self.posts.splice(0, 0, new Post(post, self.hub));
            }            
            checkpost = 'N';            
        }

        self.loadNewPosts = function () {
            self.posts(self.newPosts().concat(self.posts()));
            self.newPosts([]);
        }
            
        self.count = ko.computed(function () {
            var countNum = 140 - self.newMessage().length;
            return countNum;
        });

        // notification of reply
        self.hub.client.newReplyNoti = function (num , postid) {           
            var replysfind = ko.utils.arrayFirst(self.posts(), function (item) {
                return item.PostId === postid;
            });
            if (replysfind != null) {                
                replysfind.notification(replysfind.notification() + num);
            }
            //alert(self.notification());
        }
        // end

        self.loadMores = function () {
            $.get('@Url.Action("GetCommentBySymbol", "FollowStock")',
            {
                stockCurrent: '@ViewBag.StockCode',
                skipposition: self.posts().length
            }, function (data) {                
              
                var mappedPosts = $.map(ko.utils.parseJson(data), function (item) { return new Post(item, self.hub); });
                $(mappedPosts).each(function (index, element) {                    
                    self.posts.push(element);                    
                });                
            })
        };
    }

    ko.bindingHandlers.limitCharacters = {
        update: function (element, valueAccessor, allBindingsAccessor, viewModel) {
            element.value = element.value.substr(0, valueAccessor());
            allBindingsAccessor().value(element.value.substr(0, valueAccessor()));
        }
    };

    var vmPost = new viewModel();
    ko.applyBindings(vmPost, document.getElementById("CommentForKoLoad"));
    $.connection.hub.start().done(function () {
        vmPost.init();
    });

</script>




